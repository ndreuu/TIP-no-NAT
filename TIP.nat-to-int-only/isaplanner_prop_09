
(set-logic HORN)
(define-fun Z_141 () Int 0)
(define-fun S_49 ((x Int)) Int (+ x 1))
(declare-fun diseqNat_49 (Int Int) Bool)
(declare-fun projS_47 (Int Int) Bool)
(declare-fun isZ_49 (Int) Bool)
(declare-fun isS_49 (Int) Bool)
(assert (forall ((x_1466 Int))
	(projS_47 x_1466 (S_49 x_1466))))
(assert (isZ_49 Z_141))
(assert (forall ((x_1468 Int))
	(isS_49 (S_49 x_1468))))
(assert (forall ((x_1469 Int))
	(diseqNat_49 Z_141 (S_49 x_1469))))
(assert (forall ((x_1470 Int))
	(diseqNat_49 (S_49 x_1470) Z_141)))
(assert (forall ((x_1471 Int) (x_1472 Int))
	(=> (diseqNat_49 x_1471 x_1472) (diseqNat_49 (S_49 x_1471) (S_49 x_1472)))))
(declare-fun x_1448 (Int Int Int) Bool)
(assert (forall ((x_1453 Int) (x_1450 Int) (z_142 Int))
	(=> (x_1448 x_1453 z_142 x_1450) (x_1448 x_1453 (S_49 z_142) (S_49 x_1450)))))
(assert (forall ((z_142 Int))
	(x_1448 (S_49 z_142) (S_49 z_142) Z_141)))
(assert (forall ((y_112 Int))
	(x_1448 Z_141 Z_141 y_112)))
(declare-fun x_1451 (Int Int Int) Bool)
(assert (forall ((x_1458 Int) (z_143 Int) (y_113 Int))
	(=> (x_1451 x_1458 z_143 y_113) (x_1451 (S_49 x_1458) (S_49 z_143) y_113))))
(assert (forall ((x_1459 Int))
	(x_1451 x_1459 Z_141 x_1459)))
(assert (forall ((x_1460 Int) (x_1461 Int) (x_1462 Int) (x_1463 Int) (i_1 Int) (j_0 Int) (k_0 Int))
	(=> (and true (diseqNat_49 x_1461 x_1463) (x_1448 x_1460 i_1 j_0) (x_1448 x_1461 x_1460 k_0) (x_1451 x_1462 j_0 k_0) (x_1448 x_1463 i_1 x_1462)) false)))
(check-sat)