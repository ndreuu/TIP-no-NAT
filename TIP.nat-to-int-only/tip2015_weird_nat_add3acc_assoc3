
(set-logic HORN)
(define-fun zero_29 () Int 0)
(define-fun succ_29 ((x Int)) Int (+ x 1))
(declare-fun diseqNat_233 (Int Int) Bool)
(declare-fun p_85 (Int Int) Bool)
(declare-fun iszero_29 (Int) Bool)
(declare-fun issucc_29 (Int) Bool)
(assert (forall ((x_18592 Int))
	(p_85 x_18592 (succ_29 x_18592))))
(assert (iszero_29 zero_29))
(assert (forall ((x_18594 Int))
	(issucc_29 (succ_29 x_18594))))
(assert (forall ((x_18595 Int))
	(diseqNat_233 zero_29 (succ_29 x_18595))))
(assert (forall ((x_18596 Int))
	(diseqNat_233 (succ_29 x_18596) zero_29)))
(assert (forall ((x_18597 Int) (x_18598 Int))
	(=> (diseqNat_233 x_18597 x_18598) (diseqNat_233 (succ_29 x_18597) (succ_29 x_18598)))))
(declare-fun addacc_5 (Int Int Int Int) Bool)
(assert (forall ((x_18581 Int) (x_18574 Int) (y_719 Int) (z_733 Int))
	(=> (addacc_5 x_18581 x_18574 (succ_29 y_719) z_733) (addacc_5 x_18581 (succ_29 x_18574) y_719 z_733))))
(assert (forall ((x_18583 Int) (x_18575 Int) (z_733 Int))
	(=> (addacc_5 x_18583 zero_29 x_18575 (succ_29 z_733)) (addacc_5 x_18583 zero_29 (succ_29 x_18575) z_733))))
(assert (forall ((x_18585 Int))
	(addacc_5 x_18585 zero_29 zero_29 x_18585)))
(assert (forall ((x_18586 Int) (x_18587 Int) (x_18588 Int) (x_18589 Int) (x_18576 Int) (x_18577 Int) (x_18578 Int) (x_18579 Int) (x_18580 Int))
	(=> (and true (diseqNat_233 x_18587 x_18589) (addacc_5 x_18586 x_18577 x_18578 x_18579) (addacc_5 x_18587 x_18576 x_18586 x_18580) (addacc_5 x_18588 x_18578 x_18579 x_18580) (addacc_5 x_18589 x_18576 x_18577 x_18588)) false)))
(check-sat)