
(set-logic HORN)
(define-fun zero_33 () Int 0)
(define-fun succ_33 ((x Int)) Int (+ x 1))
(declare-fun diseqNat_243 (Int Int) Bool)
(declare-fun p_100 (Int Int) Bool)
(declare-fun iszero_33 (Int) Bool)
(declare-fun issucc_33 (Int) Bool)
(assert (forall ((x_21112 Int))
	(p_100 x_21112 (succ_33 x_21112))))
(assert (iszero_33 zero_33))
(assert (forall ((x_21114 Int))
	(issucc_33 (succ_33 x_21114))))
(assert (forall ((x_21115 Int))
	(diseqNat_243 zero_33 (succ_33 x_21115))))
(assert (forall ((x_21116 Int))
	(diseqNat_243 (succ_33 x_21116) zero_33)))
(assert (forall ((x_21117 Int) (x_21118 Int))
	(=> (diseqNat_243 x_21117 x_21118) (diseqNat_243 (succ_33 x_21117) (succ_33 x_21118)))))
(declare-fun addacc_6 (Int Int Int Int) Bool)
(assert (forall ((x_21103 Int) (x_21100 Int) (y_757 Int) (z_764 Int))
	(=> (addacc_6 x_21103 x_21100 (succ_33 y_757) z_764) (addacc_6 x_21103 (succ_33 x_21100) y_757 z_764))))
(assert (forall ((x_21105 Int) (x_21101 Int) (z_764 Int))
	(=> (addacc_6 x_21105 zero_33 x_21101 (succ_33 z_764)) (addacc_6 x_21105 zero_33 (succ_33 x_21101) z_764))))
(assert (forall ((x_21107 Int))
	(addacc_6 x_21107 zero_33 zero_33 x_21107)))
(assert (forall ((x_21108 Int) (x_21109 Int) (x_21102 Int) (y_758 Int) (z_765 Int))
	(=> (and true (diseqNat_243 x_21108 x_21109) (addacc_6 x_21108 x_21102 y_758 z_765) (addacc_6 x_21109 x_21102 z_765 y_758)) false)))
(check-sat)