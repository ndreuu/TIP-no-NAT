(set-logic HORN)
(declare-datatypes ((Nat_35 0)) (((Z_101 ) (S_35 (projS_32 Nat_35)))))
(declare-fun diseqNat_35 (Nat_35 Nat_35) Bool)
(declare-fun projS_33 (Nat_35 Nat_35) Bool)
(declare-fun isZ_35 (Nat_35) Bool)
(declare-fun isS_35 (Nat_35) Bool)
(assert (forall ((x_1113 Nat_35))
	(projS_33 x_1113 (S_35 x_1113))))
(assert (isZ_35 Z_101))
(assert (forall ((x_1115 Nat_35))
	(isS_35 (S_35 x_1115))))
(assert (forall ((x_1116 Nat_35))
	(diseqNat_35 Z_101 (S_35 x_1116))))
(assert (forall ((x_1117 Nat_35))
	(diseqNat_35 (S_35 x_1117) Z_101)))
(assert (forall ((x_1118 Nat_35) (x_1119 Nat_35))
	(=> (diseqNat_35 x_1118 x_1119)
	    (diseqNat_35 (S_35 x_1118) (S_35 x_1119)))))
(declare-datatypes ((list_22 0)) (((nil_22 ) (cons_22 (head_44 Nat_35) (tail_44 list_22)))))
(declare-fun diseqlist_22 (list_22 list_22) Bool)
(declare-fun head_45 (Nat_35 list_22) Bool)
(declare-fun tail_45 (list_22 list_22) Bool)
(declare-fun isnil_22 (list_22) Bool)
(declare-fun iscons_22 (list_22) Bool)
(assert (forall ((x_1121 Nat_35) (x_1122 list_22))
	(head_45 x_1121 (cons_22 x_1121 x_1122))))
(assert (forall ((x_1121 Nat_35) (x_1122 list_22))
	(tail_45 x_1122 (cons_22 x_1121 x_1122))))
(assert (isnil_22 nil_22))
(assert (forall ((x_1124 Nat_35) (x_1125 list_22))
	(iscons_22 (cons_22 x_1124 x_1125))))
(assert (forall ((x_1126 Nat_35) (x_1127 list_22))
	(diseqlist_22 nil_22 (cons_22 x_1126 x_1127))))
(assert (forall ((x_1128 Nat_35) (x_1129 list_22))
	(diseqlist_22 (cons_22 x_1128 x_1129) nil_22)))
(assert (forall ((x_1130 Nat_35) (x_1131 list_22) (x_1132 Nat_35) (x_1133 list_22))
	(=> (diseqNat_35 x_1130 x_1132)
	    (diseqlist_22 (cons_22 x_1130 x_1131) (cons_22 x_1132 x_1133)))))
(assert (forall ((x_1130 Nat_35) (x_1131 list_22) (x_1132 Nat_35) (x_1133 list_22))
	(=> (diseqlist_22 x_1131 x_1133)
	    (diseqlist_22 (cons_22 x_1130 x_1131) (cons_22 x_1132 x_1133)))))
(declare-fun last_2 (Nat_35 list_22) Bool)
(assert (forall ((x_1097 Nat_35) (x_1091 Nat_35) (x_1092 list_22) (y_80 Nat_35))
	(=> (last_2 x_1097 (cons_22 x_1091 x_1092))
	    (last_2 x_1097 (cons_22 y_80 (cons_22 x_1091 x_1092))))))
(assert (forall ((x_1099 Nat_35))
	(last_2 x_1099 (cons_22 x_1099 nil_22))))
(assert (last_2 Z_101 nil_22))
(declare-fun lastOfTwo_0 (Nat_35 list_22 list_22) Bool)
(assert (forall ((x_1101 Nat_35) (z_103 Nat_35) (x_1094 list_22) (x_1093 list_22))
	(=> (last_2 x_1101 (cons_22 z_103 x_1094))
	    (lastOfTwo_0 x_1101 x_1093 (cons_22 z_103 x_1094)))))
(assert (forall ((x_1103 Nat_35) (x_1093 list_22))
	(=> (last_2 x_1103 x_1093)
	    (lastOfTwo_0 x_1103 x_1093 nil_22))))
(declare-fun x_1095 (list_22 list_22 list_22) Bool)
(assert (forall ((x_1106 list_22) (z_104 Nat_35) (xs_27 list_22) (y_82 list_22))
	(=> (x_1095 x_1106 xs_27 y_82)
	    (x_1095 (cons_22 z_104 x_1106) (cons_22 z_104 xs_27) y_82))))
(assert (forall ((x_1107 list_22))
	(x_1095 x_1107 nil_22 x_1107)))
(assert (forall ((x_1108 list_22) (x_1109 Nat_35) (x_1110 Nat_35) (xs_28 list_22) (ys_10 list_22))
	(=>	(and true
			(diseqNat_35 x_1109 x_1110)
			(x_1095 x_1108 xs_28 ys_10)
			(last_2 x_1109 x_1108)
			(lastOfTwo_0 x_1110 xs_28 ys_10))
		false)))
(check-sat)
