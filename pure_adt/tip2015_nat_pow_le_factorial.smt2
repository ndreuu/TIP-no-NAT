(set-logic HORN)
(declare-datatypes ((Bool_270 0)) (((false_270 ) (true_270 ))))
(declare-fun diseqBool_128 (Bool_270 Bool_270) Bool)
(declare-fun isfalse_128 (Bool_270) Bool)
(declare-fun istrue_128 (Bool_270) Bool)
(assert (isfalse_128 false_270))
(assert (istrue_128 true_270))
(assert (diseqBool_128 false_270 true_270))
(assert (diseqBool_128 true_270 false_270))
(declare-fun and_270 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun or_276 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun hence_270 (Bool_270 Bool_270 Bool_270) Bool)
(declare-fun not_274 (Bool_270 Bool_270) Bool)
(assert (and_270 false_270 false_270 false_270))
(assert (and_270 false_270 true_270 false_270))
(assert (and_270 false_270 false_270 true_270))
(assert (and_270 true_270 true_270 true_270))
(assert (or_276 false_270 false_270 false_270))
(assert (or_276 true_270 true_270 false_270))
(assert (or_276 true_270 false_270 true_270))
(assert (or_276 true_270 true_270 true_270))
(assert (hence_270 true_270 false_270 false_270))
(assert (hence_270 false_270 true_270 false_270))
(assert (hence_270 true_270 false_270 true_270))
(assert (hence_270 true_270 true_270 true_270))
(assert (not_274 true_270 false_270))
(assert (not_274 false_270 true_270))
(declare-datatypes ((Nat_456 0)) (((zero_116 ) (succ_113 (p_324 Nat_456)))))
(declare-fun diseqNat_456 (Nat_456 Nat_456) Bool)
(declare-fun p_325 (Nat_456 Nat_456) Bool)
(declare-fun iszero_113 (Nat_456) Bool)
(declare-fun issucc_113 (Nat_456) Bool)
(assert (forall ((x_50271 Nat_456))
	(p_325 x_50271 (succ_113 x_50271))))
(assert (iszero_113 zero_116))
(assert (forall ((x_50273 Nat_456))
	(issucc_113 (succ_113 x_50273))))
(assert (forall ((x_50274 Nat_456))
	(diseqNat_456 zero_116 (succ_113 x_50274))))
(assert (forall ((x_50275 Nat_456))
	(diseqNat_456 (succ_113 x_50275) zero_116)))
(assert (forall ((x_50276 Nat_456) (x_50277 Nat_456))
	(=> (diseqNat_456 x_50276 x_50277)
	    (diseqNat_456 (succ_113 x_50276) (succ_113 x_50277)))))
(declare-fun plus_113 (Nat_456 Nat_456 Nat_456) Bool)
(assert (forall ((x_50216 Nat_456) (z_1618 Nat_456) (y_1810 Nat_456))
	(=> (plus_113 x_50216 z_1618 y_1810)
	    (plus_113 (succ_113 x_50216) (succ_113 z_1618) y_1810))))
(assert (forall ((x_50217 Nat_456))
	(plus_113 x_50217 zero_116 x_50217)))
(declare-fun times_26 (Nat_456 Nat_456 Nat_456) Bool)
(assert (forall ((x_50218 Nat_456) (x_50219 Nat_456) (z_1619 Nat_456) (y_1811 Nat_456))
	(=>	(and (times_26 x_50219 z_1619 y_1811)
			(plus_113 x_50218 y_1811 x_50219))
		(times_26 x_50218 (succ_113 z_1619) y_1811))))
(assert (forall ((y_1811 Nat_456))
	(times_26 zero_116 zero_116 y_1811)))
(declare-fun lt_288 (Bool_270 Nat_456 Nat_456) Bool)
(assert (forall ((x_50222 Bool_270) (n_92 Nat_456) (z_1620 Nat_456))
	(=> (lt_288 x_50222 n_92 z_1620)
	    (lt_288 x_50222 (succ_113 n_92) (succ_113 z_1620)))))
(assert (forall ((z_1620 Nat_456))
	(lt_288 true_270 zero_116 (succ_113 z_1620))))
(assert (forall ((x_50200 Nat_456))
	(lt_288 false_270 x_50200 zero_116)))
(declare-fun formulapow_10 (Nat_456 Nat_456 Nat_456) Bool)
(assert (forall ((x_50226 Nat_456) (x_50227 Nat_456) (z_1621 Nat_456) (x_50201 Nat_456))
	(=>	(and (formulapow_10 x_50227 x_50201 z_1621)
			(times_26 x_50226 x_50201 x_50227))
		(formulapow_10 x_50226 x_50201 (succ_113 z_1621)))))
(assert (forall ((x_50201 Nat_456))
	(formulapow_10 (succ_113 zero_116) x_50201 zero_116)))
(declare-fun factorial_0 (Nat_456 Nat_456) Bool)
(assert (forall ((x_50230 Nat_456) (x_50231 Nat_456) (y_1814 Nat_456))
	(=>	(and (factorial_0 x_50231 y_1814)
			(times_26 x_50230 (succ_113 y_1814) x_50231))
		(factorial_0 x_50230 (succ_113 y_1814)))))
(assert (factorial_0 (succ_113 zero_116) zero_116))
(assert (forall ((x_50234 Nat_456) (x_50235 Nat_456) (x_50236 Nat_456) (x_50237 Nat_456) (n_93 Nat_456))
	(=>	(and true
			(plus_113 x_50234 (succ_113 (succ_113 (succ_113 (succ_113 zero_116)))) n_93)
			(formulapow_10 x_50235 (succ_113 (succ_113 zero_116)) x_50234)
			(plus_113 x_50236 (succ_113 (succ_113 (succ_113 (succ_113 zero_116)))) n_93)
			(factorial_0 x_50237 x_50236)
			(lt_288 false_270 x_50235 x_50237))
		false)))
(assert (forall ((x_50239 Nat_456) (x_50240 Nat_456) (x_50241 Nat_456) (x_50242 Nat_456) (x_50203 Nat_456) (y_1815 Nat_456) (z_1622 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50240 x_50242)
			(times_26 x_50239 y_1815 z_1622)
			(times_26 x_50240 x_50203 x_50239)
			(times_26 x_50241 x_50203 y_1815)
			(times_26 x_50242 x_50241 z_1622))
		false)))
(assert (forall ((x_50243 Nat_456) (x_50244 Nat_456) (x_50245 Nat_456) (x_50246 Nat_456) (x_50204 Nat_456) (y_1816 Nat_456) (z_1623 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50244 x_50246)
			(plus_113 x_50243 y_1816 z_1623)
			(plus_113 x_50244 x_50204 x_50243)
			(plus_113 x_50245 x_50204 y_1816)
			(plus_113 x_50246 x_50245 z_1623))
		false)))
(assert (forall ((x_50247 Nat_456) (x_50248 Nat_456) (x_50205 Nat_456) (y_1817 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50247 x_50248)
			(times_26 x_50247 x_50205 y_1817)
			(times_26 x_50248 y_1817 x_50205))
		false)))
(assert (forall ((x_50249 Nat_456) (x_50250 Nat_456) (x_50206 Nat_456) (y_1818 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50249 x_50250)
			(plus_113 x_50249 x_50206 y_1818)
			(plus_113 x_50250 y_1818 x_50206))
		false)))
(assert (forall ((x_50251 Nat_456) (x_50252 Nat_456) (x_50253 Nat_456) (x_50254 Nat_456) (x_50255 Nat_456) (x_50207 Nat_456) (y_1819 Nat_456) (z_1624 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50252 x_50255)
			(plus_113 x_50251 y_1819 z_1624)
			(times_26 x_50252 x_50207 x_50251)
			(times_26 x_50253 x_50207 y_1819)
			(times_26 x_50254 x_50207 z_1624)
			(plus_113 x_50255 x_50253 x_50254))
		false)))
(assert (forall ((x_50256 Nat_456) (x_50257 Nat_456) (x_50258 Nat_456) (x_50259 Nat_456) (x_50260 Nat_456) (x_50208 Nat_456) (y_1820 Nat_456) (z_1625 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50257 x_50260)
			(plus_113 x_50256 x_50208 y_1820)
			(times_26 x_50257 x_50256 z_1625)
			(times_26 x_50258 x_50208 z_1625)
			(times_26 x_50259 y_1820 z_1625)
			(plus_113 x_50260 x_50258 x_50259))
		false)))
(assert (forall ((x_50261 Nat_456) (x_50209 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50261 x_50209)
			(times_26 x_50261 x_50209 (succ_113 zero_116)))
		false)))
(assert (forall ((x_50262 Nat_456) (x_50210 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50262 x_50210)
			(times_26 x_50262 (succ_113 zero_116) x_50210))
		false)))
(assert (forall ((x_50263 Nat_456) (x_50211 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50263 x_50211)
			(plus_113 x_50263 x_50211 zero_116))
		false)))
(assert (forall ((x_50264 Nat_456) (x_50212 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50264 x_50212)
			(plus_113 x_50264 zero_116 x_50212))
		false)))
(assert (forall ((x_50265 Nat_456) (x_50213 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50265 zero_116)
			(times_26 x_50265 x_50213 zero_116))
		false)))
(assert (forall ((x_50266 Nat_456) (x_50214 Nat_456))
	(=>	(and true
			(diseqNat_456 x_50266 zero_116)
			(times_26 x_50266 zero_116 x_50214))
		false)))
(check-sat)
