(set-logic HORN)
(declare-datatypes ((Nat_397 0)) (((Z_1392 ) (S_332 (unS_466 Nat_397)))))
(declare-fun diseqNat_397 (Nat_397 Nat_397) Bool)
(declare-fun unS_467 (Nat_397 Nat_397) Bool)
(declare-fun isZ_306 (Nat_397) Bool)
(declare-fun isS_306 (Nat_397) Bool)
(assert (forall ((x_42668 Nat_397))
	(unS_467 x_42668 (S_332 x_42668))))
(assert (isZ_306 Z_1392))
(assert (forall ((x_42670 Nat_397))
	(isS_306 (S_332 x_42670))))
(assert (forall ((x_42671 Nat_397))
	(diseqNat_397 Z_1392 (S_332 x_42671))))
(assert (forall ((x_42672 Nat_397))
	(diseqNat_397 (S_332 x_42672) Z_1392)))
(assert (forall ((x_42673 Nat_397) (x_42674 Nat_397))
	(=> (diseqNat_397 x_42673 x_42674)
	    (diseqNat_397 (S_332 x_42673) (S_332 x_42674)))))
(declare-fun add_250 (Nat_397 Nat_397 Nat_397) Bool)
(declare-fun minus_247 (Nat_397 Nat_397 Nat_397) Bool)
(declare-fun le_233 (Nat_397 Nat_397) Bool)
(declare-fun ge_233 (Nat_397 Nat_397) Bool)
(declare-fun lt_249 (Nat_397 Nat_397) Bool)
(declare-fun gt_236 (Nat_397 Nat_397) Bool)
(declare-fun mult_233 (Nat_397 Nat_397 Nat_397) Bool)
(declare-fun div_233 (Nat_397 Nat_397 Nat_397) Bool)
(declare-fun mod_235 (Nat_397 Nat_397 Nat_397) Bool)
(assert (forall ((y_1534 Nat_397))
	(add_250 y_1534 Z_1392 y_1534)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397) (r_289 Nat_397))
	(=> (add_250 r_289 x_42618 y_1534)
	    (add_250 (S_332 r_289) (S_332 x_42618) y_1534))))
(assert (forall ((y_1534 Nat_397))
	(minus_247 Z_1392 Z_1392 y_1534)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397) (r_289 Nat_397))
	(=> (minus_247 r_289 x_42618 y_1534)
	    (minus_247 (S_332 r_289) (S_332 x_42618) y_1534))))
(assert (forall ((y_1534 Nat_397))
	(le_233 Z_1392 y_1534)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (le_233 x_42618 y_1534)
	    (le_233 (S_332 x_42618) (S_332 y_1534)))))
(assert (forall ((y_1534 Nat_397))
	(ge_233 y_1534 Z_1392)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (ge_233 x_42618 y_1534)
	    (ge_233 (S_332 x_42618) (S_332 y_1534)))))
(assert (forall ((y_1534 Nat_397))
	(lt_249 Z_1392 (S_332 y_1534))))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (lt_249 x_42618 y_1534)
	    (lt_249 (S_332 x_42618) (S_332 y_1534)))))
(assert (forall ((y_1534 Nat_397))
	(gt_236 (S_332 y_1534) Z_1392)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (gt_236 x_42618 y_1534)
	    (gt_236 (S_332 x_42618) (S_332 y_1534)))))
(assert (forall ((y_1534 Nat_397))
	(mult_233 Z_1392 Z_1392 y_1534)))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397) (r_289 Nat_397) (z_1393 Nat_397))
	(=>	(and (mult_233 r_289 x_42618 y_1534)
			(add_250 z_1393 r_289 y_1534))
		(mult_233 z_1393 (S_332 x_42618) y_1534))))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (lt_249 x_42618 y_1534)
	    (div_233 Z_1392 x_42618 y_1534))))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397) (r_289 Nat_397) (z_1393 Nat_397))
	(=>	(and (ge_233 x_42618 y_1534)
			(minus_247 z_1393 x_42618 y_1534)
			(div_233 r_289 z_1393 y_1534))
		(div_233 (S_332 r_289) x_42618 y_1534))))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397))
	(=> (lt_249 x_42618 y_1534)
	    (mod_235 x_42618 x_42618 y_1534))))
(assert (forall ((x_42618 Nat_397) (y_1534 Nat_397) (r_289 Nat_397) (z_1393 Nat_397))
	(=>	(and (ge_233 x_42618 y_1534)
			(minus_247 z_1393 x_42618 y_1534)
			(mod_235 r_289 z_1393 y_1534))
		(mod_235 r_289 x_42618 y_1534))))
(declare-datatypes ((list_163 0)) (((nil_185 ) (cons_163 (head_326 Nat_397) (tail_326 list_163)))))
(declare-fun diseqlist_163 (list_163 list_163) Bool)
(declare-fun head_328 (Nat_397 list_163) Bool)
(declare-fun tail_328 (list_163 list_163) Bool)
(declare-fun isnil_185 (list_163) Bool)
(declare-fun iscons_163 (list_163) Bool)
(assert (forall ((x_42620 Nat_397) (x_42621 list_163))
	(head_328 x_42620 (cons_163 x_42620 x_42621))))
(assert (forall ((x_42620 Nat_397) (x_42621 list_163))
	(tail_328 x_42621 (cons_163 x_42620 x_42621))))
(assert (isnil_185 nil_185))
(assert (forall ((x_42623 Nat_397) (x_42624 list_163))
	(iscons_163 (cons_163 x_42623 x_42624))))
(assert (forall ((x_42625 Nat_397) (x_42626 list_163))
	(diseqlist_163 nil_185 (cons_163 x_42625 x_42626))))
(assert (forall ((x_42627 Nat_397) (x_42628 list_163))
	(diseqlist_163 (cons_163 x_42627 x_42628) nil_185)))
(assert (forall ((x_42629 Nat_397) (x_42630 list_163) (x_42631 Nat_397) (x_42632 list_163))
	(=> (diseqNat_397 x_42629 x_42631)
	    (diseqlist_163 (cons_163 x_42629 x_42630) (cons_163 x_42631 x_42632)))))
(assert (forall ((x_42629 Nat_397) (x_42630 list_163) (x_42631 Nat_397) (x_42632 list_163))
	(=> (diseqlist_163 x_42630 x_42632)
	    (diseqlist_163 (cons_163 x_42629 x_42630) (cons_163 x_42631 x_42632)))))
(declare-datatypes ((Tree_6 0)) (((Node_11 (projNode_66 Tree_6) (projNode_67 Nat_397) (projNode_68 Tree_6)) (Nil_186 ))))
(declare-fun diseqTree_6 (Tree_6 Tree_6) Bool)
(declare-fun projNode_69 (Tree_6 Tree_6) Bool)
(declare-fun projNode_70 (Nat_397 Tree_6) Bool)
(declare-fun projNode_71 (Tree_6 Tree_6) Bool)
(declare-fun isNode_11 (Tree_6) Bool)
(declare-fun isNil_186 (Tree_6) Bool)
(assert (forall ((x_42633 Tree_6) (x_42634 Nat_397) (x_42635 Tree_6))
	(projNode_69 x_42633 (Node_11 x_42633 x_42634 x_42635))))
(assert (forall ((x_42633 Tree_6) (x_42634 Nat_397) (x_42635 Tree_6))
	(projNode_70 x_42634 (Node_11 x_42633 x_42634 x_42635))))
(assert (forall ((x_42633 Tree_6) (x_42634 Nat_397) (x_42635 Tree_6))
	(projNode_71 x_42635 (Node_11 x_42633 x_42634 x_42635))))
(assert (forall ((x_42638 Tree_6) (x_42639 Nat_397) (x_42640 Tree_6))
	(isNode_11 (Node_11 x_42638 x_42639 x_42640))))
(assert (isNil_186 Nil_186))
(assert (forall ((x_42641 Tree_6) (x_42642 Nat_397) (x_42643 Tree_6))
	(diseqTree_6 (Node_11 x_42641 x_42642 x_42643) Nil_186)))
(assert (forall ((x_42644 Tree_6) (x_42645 Nat_397) (x_42646 Tree_6))
	(diseqTree_6 Nil_186 (Node_11 x_42644 x_42645 x_42646))))
(assert (forall ((x_42647 Tree_6) (x_42648 Nat_397) (x_42649 Tree_6) (x_42650 Tree_6) (x_42651 Nat_397) (x_42652 Tree_6))
	(=> (diseqTree_6 x_42647 x_42650)
	    (diseqTree_6 (Node_11 x_42647 x_42648 x_42649) (Node_11 x_42650 x_42651 x_42652)))))
(assert (forall ((x_42647 Tree_6) (x_42648 Nat_397) (x_42649 Tree_6) (x_42650 Tree_6) (x_42651 Nat_397) (x_42652 Tree_6))
	(=> (diseqNat_397 x_42648 x_42651)
	    (diseqTree_6 (Node_11 x_42647 x_42648 x_42649) (Node_11 x_42650 x_42651 x_42652)))))
(assert (forall ((x_42647 Tree_6) (x_42648 Nat_397) (x_42649 Tree_6) (x_42650 Tree_6) (x_42651 Nat_397) (x_42652 Tree_6))
	(=> (diseqTree_6 x_42649 x_42652)
	    (diseqTree_6 (Node_11 x_42647 x_42648 x_42649) (Node_11 x_42650 x_42651 x_42652)))))
(declare-datatypes ((list_164 0)) (((nil_187 ) (cons_164 (head_327 Tree_6) (tail_327 list_164)))))
(declare-fun diseqlist_164 (list_164 list_164) Bool)
(declare-fun head_329 (Tree_6 list_164) Bool)
(declare-fun tail_329 (list_164 list_164) Bool)
(declare-fun isnil_187 (list_164) Bool)
(declare-fun iscons_164 (list_164) Bool)
(assert (forall ((x_42654 Tree_6) (x_42655 list_164))
	(head_329 x_42654 (cons_164 x_42654 x_42655))))
(assert (forall ((x_42654 Tree_6) (x_42655 list_164))
	(tail_329 x_42655 (cons_164 x_42654 x_42655))))
(assert (isnil_187 nil_187))
(assert (forall ((x_42657 Tree_6) (x_42658 list_164))
	(iscons_164 (cons_164 x_42657 x_42658))))
(assert (forall ((x_42659 Tree_6) (x_42660 list_164))
	(diseqlist_164 nil_187 (cons_164 x_42659 x_42660))))
(assert (forall ((x_42661 Tree_6) (x_42662 list_164))
	(diseqlist_164 (cons_164 x_42661 x_42662) nil_187)))
(assert (forall ((x_42663 Tree_6) (x_42664 list_164) (x_42665 Tree_6) (x_42666 list_164))
	(=> (diseqTree_6 x_42663 x_42665)
	    (diseqlist_164 (cons_164 x_42663 x_42664) (cons_164 x_42665 x_42666)))))
(assert (forall ((x_42663 Tree_6) (x_42664 list_164) (x_42665 Tree_6) (x_42666 list_164))
	(=> (diseqlist_164 x_42664 x_42666)
	    (diseqlist_164 (cons_164 x_42663 x_42664) (cons_164 x_42665 x_42666)))))
(declare-fun flatten_6 (list_163 list_164) Bool)
(assert (forall ((x_42600 list_163) (ps_0 list_164))
	(=> (flatten_6 x_42600 ps_0)
	    (flatten_6 x_42600 (cons_164 Nil_186 ps_0)))))
(assert (forall ((x_42603 list_163) (x_42593 Nat_397) (q_94 Tree_6) (ps_0 list_164))
	(=> (flatten_6 x_42603 (cons_164 q_94 ps_0))
	    (flatten_6 (cons_163 x_42593 x_42603) (cons_164 (Node_11 Nil_186 x_42593 q_94) ps_0)))))
(assert (forall ((x_42604 list_163) (x_42594 Tree_6) (x_42595 Nat_397) (x_42596 Tree_6) (x_42593 Nat_397) (q_94 Tree_6) (ps_0 list_164))
	(=> (flatten_6 x_42604 (cons_164 (Node_11 x_42594 x_42595 x_42596) (cons_164 (Node_11 Nil_186 x_42593 q_94) ps_0)))
	    (flatten_6 x_42604 (cons_164 (Node_11 (Node_11 x_42594 x_42595 x_42596) x_42593 q_94) ps_0)))))
(assert (flatten_6 nil_185 nil_187))
(declare-fun x_42597 (list_163 list_163 list_163) Bool)
(assert (forall ((x_42608 list_163) (z_1391 Nat_397) (xs_454 list_163) (y_1532 list_163))
	(=> (x_42597 x_42608 xs_454 y_1532)
	    (x_42597 (cons_163 z_1391 x_42608) (cons_163 z_1391 xs_454) y_1532))))
(assert (forall ((x_42609 list_163))
	(x_42597 x_42609 nil_185 x_42609)))
(declare-fun flatten_7 (list_163 Tree_6) Bool)
(assert (flatten_7 nil_185 Nil_186))
(assert (forall ((x_42611 list_163) (x_42612 list_163) (x_42613 list_163) (x_42614 list_163) (p_263 Tree_6) (y_1533 Nat_397) (q_95 Tree_6))
	(=>	(and (flatten_7 x_42612 p_263)
			(flatten_7 x_42613 q_95)
			(x_42597 x_42614 (cons_163 y_1533 nil_185) x_42613)
			(x_42597 x_42611 x_42612 x_42614))
		(flatten_7 x_42611 (Node_11 p_263 y_1533 q_95)))))
(assert (forall ((x_42616 list_163) (x_42617 list_163) (p_264 Tree_6))
	(=>	(and true
			(diseqlist_163 x_42616 x_42617)
			(flatten_6 x_42616 (cons_164 p_264 nil_187))
			(flatten_7 x_42617 p_264))
		false)))
(check-sat)
