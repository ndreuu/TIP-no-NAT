(set-logic HORN)
(declare-datatypes ((Nat_20 0)) (((Z_57 ) (S_20 (unS_20 Nat_20)))))
(declare-fun diseqNat_20 (Nat_20 Nat_20) Bool)
(declare-fun unS_21 (Nat_20 Nat_20) Bool)
(declare-fun isZ_20 (Nat_20) Bool)
(declare-fun isS_20 (Nat_20) Bool)
(assert (forall ((x_619 Nat_20))
	(unS_21 x_619 (S_20 x_619))))
(assert (isZ_20 Z_57))
(assert (forall ((x_621 Nat_20))
	(isS_20 (S_20 x_621))))
(assert (forall ((x_622 Nat_20))
	(diseqNat_20 Z_57 (S_20 x_622))))
(assert (forall ((x_623 Nat_20))
	(diseqNat_20 (S_20 x_623) Z_57)))
(assert (forall ((x_624 Nat_20) (x_625 Nat_20))
	(=> (diseqNat_20 x_624 x_625)
	    (diseqNat_20 (S_20 x_624) (S_20 x_625)))))
(declare-fun add_10 (Nat_20 Nat_20 Nat_20) Bool)
(declare-fun minus_10 (Nat_20 Nat_20 Nat_20) Bool)
(declare-fun le_10 (Nat_20 Nat_20) Bool)
(declare-fun ge_10 (Nat_20 Nat_20) Bool)
(declare-fun lt_10 (Nat_20 Nat_20) Bool)
(declare-fun gt_10 (Nat_20 Nat_20) Bool)
(declare-fun mult_10 (Nat_20 Nat_20 Nat_20) Bool)
(declare-fun div_10 (Nat_20 Nat_20 Nat_20) Bool)
(declare-fun mod_10 (Nat_20 Nat_20 Nat_20) Bool)
(assert (forall ((y_47 Nat_20))
	(add_10 y_47 Z_57 y_47)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20) (r_10 Nat_20))
	(=> (add_10 r_10 x_572 y_47)
	    (add_10 (S_20 r_10) (S_20 x_572) y_47))))
(assert (forall ((y_47 Nat_20))
	(minus_10 Z_57 Z_57 y_47)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20) (r_10 Nat_20))
	(=> (minus_10 r_10 x_572 y_47)
	    (minus_10 (S_20 r_10) (S_20 x_572) y_47))))
(assert (forall ((y_47 Nat_20))
	(le_10 Z_57 y_47)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (le_10 x_572 y_47)
	    (le_10 (S_20 x_572) (S_20 y_47)))))
(assert (forall ((y_47 Nat_20))
	(ge_10 y_47 Z_57)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (ge_10 x_572 y_47)
	    (ge_10 (S_20 x_572) (S_20 y_47)))))
(assert (forall ((y_47 Nat_20))
	(lt_10 Z_57 (S_20 y_47))))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (lt_10 x_572 y_47)
	    (lt_10 (S_20 x_572) (S_20 y_47)))))
(assert (forall ((y_47 Nat_20))
	(gt_10 (S_20 y_47) Z_57)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (gt_10 x_572 y_47)
	    (gt_10 (S_20 x_572) (S_20 y_47)))))
(assert (forall ((y_47 Nat_20))
	(mult_10 Z_57 Z_57 y_47)))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20) (r_10 Nat_20) (z_58 Nat_20))
	(=>	(and (mult_10 r_10 x_572 y_47)
			(add_10 z_58 r_10 y_47))
		(mult_10 z_58 (S_20 x_572) y_47))))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (lt_10 x_572 y_47)
	    (div_10 Z_57 x_572 y_47))))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20) (r_10 Nat_20) (z_58 Nat_20))
	(=>	(and (ge_10 x_572 y_47)
			(minus_10 z_58 x_572 y_47)
			(div_10 r_10 z_58 y_47))
		(div_10 (S_20 r_10) x_572 y_47))))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20))
	(=> (lt_10 x_572 y_47)
	    (mod_10 x_572 x_572 y_47))))
(assert (forall ((x_572 Nat_20) (y_47 Nat_20) (r_10 Nat_20) (z_58 Nat_20))
	(=>	(and (ge_10 x_572 y_47)
			(minus_10 z_58 x_572 y_47)
			(mod_10 r_10 z_58 y_47))
		(mod_10 r_10 x_572 y_47))))
(declare-datatypes ((pair_4 0)) (((pair_5 (projpair_8 Nat_20) (projpair_9 Nat_20)))))
(declare-fun diseqpair_2 (pair_4 pair_4) Bool)
(declare-fun projpair_10 (Nat_20 pair_4) Bool)
(declare-fun projpair_11 (Nat_20 pair_4) Bool)
(declare-fun ispair_2 (pair_4) Bool)
(assert (forall ((x_573 Nat_20) (x_574 Nat_20))
	(projpair_10 x_573 (pair_5 x_573 x_574))))
(assert (forall ((x_573 Nat_20) (x_574 Nat_20))
	(projpair_11 x_574 (pair_5 x_573 x_574))))
(assert (forall ((x_576 Nat_20) (x_577 Nat_20))
	(ispair_2 (pair_5 x_576 x_577))))
(assert (forall ((x_578 Nat_20) (x_579 Nat_20) (x_580 Nat_20) (x_581 Nat_20))
	(=> (diseqNat_20 x_578 x_580)
	    (diseqpair_2 (pair_5 x_578 x_579) (pair_5 x_580 x_581)))))
(assert (forall ((x_578 Nat_20) (x_579 Nat_20) (x_580 Nat_20) (x_581 Nat_20))
	(=> (diseqNat_20 x_579 x_581)
	    (diseqpair_2 (pair_5 x_578 x_579) (pair_5 x_580 x_581)))))
(declare-datatypes ((list_10 0)) (((nil_10 ) (cons_10 (head_20 Nat_20) (tail_20 list_10)))))
(declare-fun diseqlist_10 (list_10 list_10) Bool)
(declare-fun head_22 (Nat_20 list_10) Bool)
(declare-fun tail_22 (list_10 list_10) Bool)
(declare-fun isnil_10 (list_10) Bool)
(declare-fun iscons_10 (list_10) Bool)
(assert (forall ((x_583 Nat_20) (x_584 list_10))
	(head_22 x_583 (cons_10 x_583 x_584))))
(assert (forall ((x_583 Nat_20) (x_584 list_10))
	(tail_22 x_584 (cons_10 x_583 x_584))))
(assert (isnil_10 nil_10))
(assert (forall ((x_586 Nat_20) (x_587 list_10))
	(iscons_10 (cons_10 x_586 x_587))))
(assert (forall ((x_588 Nat_20) (x_589 list_10))
	(diseqlist_10 nil_10 (cons_10 x_588 x_589))))
(assert (forall ((x_590 Nat_20) (x_591 list_10))
	(diseqlist_10 (cons_10 x_590 x_591) nil_10)))
(assert (forall ((x_592 Nat_20) (x_593 list_10) (x_594 Nat_20) (x_595 list_10))
	(=> (diseqNat_20 x_592 x_594)
	    (diseqlist_10 (cons_10 x_592 x_593) (cons_10 x_594 x_595)))))
(assert (forall ((x_592 Nat_20) (x_593 list_10) (x_594 Nat_20) (x_595 list_10))
	(=> (diseqlist_10 x_593 x_595)
	    (diseqlist_10 (cons_10 x_592 x_593) (cons_10 x_594 x_595)))))
(declare-datatypes ((list_11 0)) (((nil_11 ) (cons_11 (head_21 pair_4) (tail_21 list_11)))))
(declare-fun diseqlist_11 (list_11 list_11) Bool)
(declare-fun head_23 (pair_4 list_11) Bool)
(declare-fun tail_23 (list_11 list_11) Bool)
(declare-fun isnil_11 (list_11) Bool)
(declare-fun iscons_11 (list_11) Bool)
(assert (forall ((x_597 pair_4) (x_598 list_11))
	(head_23 x_597 (cons_11 x_597 x_598))))
(assert (forall ((x_597 pair_4) (x_598 list_11))
	(tail_23 x_598 (cons_11 x_597 x_598))))
(assert (isnil_11 nil_11))
(assert (forall ((x_600 pair_4) (x_601 list_11))
	(iscons_11 (cons_11 x_600 x_601))))
(assert (forall ((x_602 pair_4) (x_603 list_11))
	(diseqlist_11 nil_11 (cons_11 x_602 x_603))))
(assert (forall ((x_604 pair_4) (x_605 list_11))
	(diseqlist_11 (cons_11 x_604 x_605) nil_11)))
(assert (forall ((x_606 pair_4) (x_607 list_11) (x_608 pair_4) (x_609 list_11))
	(=> (diseqpair_2 x_606 x_608)
	    (diseqlist_11 (cons_11 x_606 x_607) (cons_11 x_608 x_609)))))
(assert (forall ((x_606 pair_4) (x_607 list_11) (x_608 pair_4) (x_609 list_11))
	(=> (diseqlist_11 x_607 x_609)
	    (diseqlist_11 (cons_11 x_606 x_607) (cons_11 x_608 x_609)))))
(declare-datatypes ((Nat_19 0)) (((Z_53 ) (S_19 (projS_18 Nat_19)))))
(declare-fun diseqNat_19 (Nat_19 Nat_19) Bool)
(declare-fun projS_19 (Nat_19 Nat_19) Bool)
(declare-fun isZ_19 (Nat_19) Bool)
(declare-fun isS_19 (Nat_19) Bool)
(assert (forall ((x_611 Nat_19))
	(projS_19 x_611 (S_19 x_611))))
(assert (isZ_19 Z_53))
(assert (forall ((x_613 Nat_19))
	(isS_19 (S_19 x_613))))
(assert (forall ((x_614 Nat_19))
	(diseqNat_19 Z_53 (S_19 x_614))))
(assert (forall ((x_615 Nat_19))
	(diseqNat_19 (S_19 x_615) Z_53)))
(assert (forall ((x_616 Nat_19) (x_617 Nat_19))
	(=> (diseqNat_19 x_616 x_617)
	    (diseqNat_19 (S_19 x_616) (S_19 x_617)))))
(declare-fun zip_2 (list_11 list_10 list_10) Bool)
(assert (forall ((x_556 list_11) (x_547 Nat_20) (x_548 list_10) (z_54 Nat_20) (x_546 list_10))
	(=> (zip_2 x_556 x_546 x_548)
	    (zip_2 (cons_11 (pair_5 z_54 x_547) x_556) (cons_10 z_54 x_546) (cons_10 x_547 x_548)))))
(assert (forall ((z_54 Nat_20) (x_546 list_10))
	(zip_2 nil_11 (cons_10 z_54 x_546) nil_10)))
(assert (forall ((y_44 list_10))
	(zip_2 nil_11 nil_10 y_44)))
(declare-fun drop_2 (list_10 Nat_19 list_10) Bool)
(assert (forall ((x_559 list_10) (x_550 Nat_20) (x_551 list_10) (z_55 Nat_19))
	(=> (drop_2 x_559 z_55 x_551)
	    (drop_2 x_559 (S_19 z_55) (cons_10 x_550 x_551)))))
(assert (forall ((z_55 Nat_19))
	(drop_2 nil_10 (S_19 z_55) nil_10)))
(assert (forall ((x_562 list_10))
	(drop_2 x_562 Z_53 x_562)))
(declare-fun drop_3 (list_11 Nat_19 list_11) Bool)
(assert (forall ((x_563 list_11) (x_553 pair_4) (x_554 list_11) (z_56 Nat_19))
	(=> (drop_3 x_563 z_56 x_554)
	    (drop_3 x_563 (S_19 z_56) (cons_11 x_553 x_554)))))
(assert (forall ((z_56 Nat_19))
	(drop_3 nil_11 (S_19 z_56) nil_11)))
(assert (forall ((x_566 list_11))
	(drop_3 x_566 Z_53 x_566)))
(assert (forall ((x_567 list_11) (x_568 list_11) (x_569 list_10) (x_570 list_10) (x_571 list_11) (n_4 Nat_19) (xs_17 list_10) (ys_5 list_10))
	(=>	(and true
			(diseqlist_11 x_568 x_571)
			(zip_2 x_567 xs_17 ys_5)
			(drop_3 x_568 n_4 x_567)
			(drop_2 x_569 n_4 xs_17)
			(drop_2 x_570 n_4 ys_5)
			(zip_2 x_571 x_569 x_570))
		false)))
(check-sat)
