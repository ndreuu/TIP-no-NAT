(set-logic HORN)
(declare-datatypes ((Nat_44 0)) (((Z_129 ) (S_44 (unS_46 Nat_44)))))
(declare-fun diseqNat_44 (Nat_44 Nat_44) Bool)
(declare-fun unS_47 (Nat_44 Nat_44) Bool)
(declare-fun isZ_44 (Nat_44) Bool)
(declare-fun isS_44 (Nat_44) Bool)
(assert (forall ((x_1355 Nat_44))
	(unS_47 x_1355 (S_44 x_1355))))
(assert (isZ_44 Z_129))
(assert (forall ((x_1357 Nat_44))
	(isS_44 (S_44 x_1357))))
(assert (forall ((x_1358 Nat_44))
	(diseqNat_44 Z_129 (S_44 x_1358))))
(assert (forall ((x_1359 Nat_44))
	(diseqNat_44 (S_44 x_1359) Z_129)))
(assert (forall ((x_1360 Nat_44) (x_1361 Nat_44))
	(=> (diseqNat_44 x_1360 x_1361)
	    (diseqNat_44 (S_44 x_1360) (S_44 x_1361)))))
(declare-fun add_23 (Nat_44 Nat_44 Nat_44) Bool)
(declare-fun minus_23 (Nat_44 Nat_44 Nat_44) Bool)
(declare-fun le_23 (Nat_44 Nat_44) Bool)
(declare-fun ge_23 (Nat_44 Nat_44) Bool)
(declare-fun lt_23 (Nat_44 Nat_44) Bool)
(declare-fun gt_23 (Nat_44 Nat_44) Bool)
(declare-fun mult_23 (Nat_44 Nat_44 Nat_44) Bool)
(declare-fun div_23 (Nat_44 Nat_44 Nat_44) Bool)
(declare-fun mod_23 (Nat_44 Nat_44 Nat_44) Bool)
(assert (forall ((y_104 Nat_44))
	(add_23 y_104 Z_129 y_104)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44) (r_23 Nat_44))
	(=> (add_23 r_23 x_1331 y_104)
	    (add_23 (S_44 r_23) (S_44 x_1331) y_104))))
(assert (forall ((y_104 Nat_44))
	(minus_23 Z_129 Z_129 y_104)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44) (r_23 Nat_44))
	(=> (minus_23 r_23 x_1331 y_104)
	    (minus_23 (S_44 r_23) (S_44 x_1331) y_104))))
(assert (forall ((y_104 Nat_44))
	(le_23 Z_129 y_104)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (le_23 x_1331 y_104)
	    (le_23 (S_44 x_1331) (S_44 y_104)))))
(assert (forall ((y_104 Nat_44))
	(ge_23 y_104 Z_129)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (ge_23 x_1331 y_104)
	    (ge_23 (S_44 x_1331) (S_44 y_104)))))
(assert (forall ((y_104 Nat_44))
	(lt_23 Z_129 (S_44 y_104))))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (lt_23 x_1331 y_104)
	    (lt_23 (S_44 x_1331) (S_44 y_104)))))
(assert (forall ((y_104 Nat_44))
	(gt_23 (S_44 y_104) Z_129)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (gt_23 x_1331 y_104)
	    (gt_23 (S_44 x_1331) (S_44 y_104)))))
(assert (forall ((y_104 Nat_44))
	(mult_23 Z_129 Z_129 y_104)))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44) (r_23 Nat_44) (z_130 Nat_44))
	(=>	(and (mult_23 r_23 x_1331 y_104)
			(add_23 z_130 r_23 y_104))
		(mult_23 z_130 (S_44 x_1331) y_104))))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (lt_23 x_1331 y_104)
	    (div_23 Z_129 x_1331 y_104))))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44) (r_23 Nat_44) (z_130 Nat_44))
	(=>	(and (ge_23 x_1331 y_104)
			(minus_23 z_130 x_1331 y_104)
			(div_23 r_23 z_130 y_104))
		(div_23 (S_44 r_23) x_1331 y_104))))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44))
	(=> (lt_23 x_1331 y_104)
	    (mod_23 x_1331 x_1331 y_104))))
(assert (forall ((x_1331 Nat_44) (y_104 Nat_44) (r_23 Nat_44) (z_130 Nat_44))
	(=>	(and (ge_23 x_1331 y_104)
			(minus_23 z_130 x_1331 y_104)
			(mod_23 r_23 z_130 y_104))
		(mod_23 r_23 x_1331 y_104))))
(declare-datatypes ((list_25 0)) (((nil_25 ) (cons_25 (head_50 Nat_44) (tail_50 list_25)))))
(declare-fun diseqlist_25 (list_25 list_25) Bool)
(declare-fun head_51 (Nat_44 list_25) Bool)
(declare-fun tail_51 (list_25 list_25) Bool)
(declare-fun isnil_25 (list_25) Bool)
(declare-fun iscons_25 (list_25) Bool)
(assert (forall ((x_1333 Nat_44) (x_1334 list_25))
	(head_51 x_1333 (cons_25 x_1333 x_1334))))
(assert (forall ((x_1333 Nat_44) (x_1334 list_25))
	(tail_51 x_1334 (cons_25 x_1333 x_1334))))
(assert (isnil_25 nil_25))
(assert (forall ((x_1336 Nat_44) (x_1337 list_25))
	(iscons_25 (cons_25 x_1336 x_1337))))
(assert (forall ((x_1338 Nat_44) (x_1339 list_25))
	(diseqlist_25 nil_25 (cons_25 x_1338 x_1339))))
(assert (forall ((x_1340 Nat_44) (x_1341 list_25))
	(diseqlist_25 (cons_25 x_1340 x_1341) nil_25)))
(assert (forall ((x_1342 Nat_44) (x_1343 list_25) (x_1344 Nat_44) (x_1345 list_25))
	(=> (diseqNat_44 x_1342 x_1344)
	    (diseqlist_25 (cons_25 x_1342 x_1343) (cons_25 x_1344 x_1345)))))
(assert (forall ((x_1342 Nat_44) (x_1343 list_25) (x_1344 Nat_44) (x_1345 list_25))
	(=> (diseqlist_25 x_1343 x_1345)
	    (diseqlist_25 (cons_25 x_1342 x_1343) (cons_25 x_1344 x_1345)))))
(declare-datatypes ((Nat_43 0)) (((Z_124 ) (S_43 (projS_40 Nat_43)))))
(declare-fun diseqNat_43 (Nat_43 Nat_43) Bool)
(declare-fun projS_41 (Nat_43 Nat_43) Bool)
(declare-fun isZ_43 (Nat_43) Bool)
(declare-fun isS_43 (Nat_43) Bool)
(assert (forall ((x_1347 Nat_43))
	(projS_41 x_1347 (S_43 x_1347))))
(assert (isZ_43 Z_124))
(assert (forall ((x_1349 Nat_43))
	(isS_43 (S_43 x_1349))))
(assert (forall ((x_1350 Nat_43))
	(diseqNat_43 Z_124 (S_43 x_1350))))
(assert (forall ((x_1351 Nat_43))
	(diseqNat_43 (S_43 x_1351) Z_124)))
(assert (forall ((x_1352 Nat_43) (x_1353 Nat_43))
	(=> (diseqNat_43 x_1352 x_1353)
	    (diseqNat_43 (S_43 x_1352) (S_43 x_1353)))))
(declare-fun take_5 (list_25 Nat_43 list_25) Bool)
(assert (forall ((x_1304 list_25) (x_1291 Nat_44) (x_1292 list_25) (z_125 Nat_43))
	(=> (take_5 x_1304 z_125 x_1292)
	    (take_5 (cons_25 x_1291 x_1304) (S_43 z_125) (cons_25 x_1291 x_1292)))))
(assert (forall ((z_125 Nat_43))
	(take_5 nil_25 (S_43 z_125) nil_25)))
(assert (forall ((y_98 list_25))
	(take_5 nil_25 Z_124 y_98)))
(declare-fun len_4 (Nat_43 list_25) Bool)
(assert (forall ((x_1308 Nat_43) (y_99 Nat_44) (xs_32 list_25))
	(=> (len_4 x_1308 xs_32)
	    (len_4 (S_43 x_1308) (cons_25 y_99 xs_32)))))
(assert (len_4 Z_124 nil_25))
(declare-fun drop_4 (list_25 Nat_43 list_25) Bool)
(assert (forall ((x_1310 list_25) (x_1295 Nat_44) (x_1296 list_25) (z_126 Nat_43))
	(=> (drop_4 x_1310 z_126 x_1296)
	    (drop_4 x_1310 (S_43 z_126) (cons_25 x_1295 x_1296)))))
(assert (forall ((z_126 Nat_43))
	(drop_4 nil_25 (S_43 z_126) nil_25)))
(assert (forall ((x_1313 list_25))
	(drop_4 x_1313 Z_124 x_1313)))
(declare-fun x_1297 (Nat_43 Nat_43 Nat_43) Bool)
(assert (forall ((x_1314 Nat_43) (x_1299 Nat_43) (z_127 Nat_43))
	(=> (x_1297 x_1314 z_127 x_1299)
	    (x_1297 x_1314 (S_43 z_127) (S_43 x_1299)))))
(assert (forall ((z_127 Nat_43))
	(x_1297 (S_43 z_127) (S_43 z_127) Z_124)))
(assert (forall ((y_101 Nat_43))
	(x_1297 Z_124 Z_124 y_101)))
(declare-fun x_1300 (list_25 list_25 list_25) Bool)
(assert (forall ((x_1319 list_25) (z_128 Nat_44) (xs_33 list_25) (y_102 list_25))
	(=> (x_1300 x_1319 xs_33 y_102)
	    (x_1300 (cons_25 z_128 x_1319) (cons_25 z_128 xs_33) y_102))))
(assert (forall ((x_1320 list_25))
	(x_1300 x_1320 nil_25 x_1320)))
(declare-fun rev_0 (list_25 list_25) Bool)
(assert (forall ((x_1321 list_25) (x_1322 list_25) (y_103 Nat_44) (xs_34 list_25))
	(=>	(and (rev_0 x_1322 xs_34)
			(x_1300 x_1321 x_1322 (cons_25 y_103 nil_25)))
		(rev_0 x_1321 (cons_25 y_103 xs_34)))))
(assert (rev_0 nil_25 nil_25))
(assert (forall ((x_1325 list_25) (x_1326 list_25) (x_1327 Nat_43) (x_1328 Nat_43) (x_1329 list_25) (x_1330 list_25) (i_0 Nat_43) (xs_35 list_25))
	(=>	(and true
			(diseqlist_25 x_1326 x_1330)
			(take_5 x_1325 i_0 xs_35)
			(rev_0 x_1326 x_1325)
			(len_4 x_1327 xs_35)
			(x_1297 x_1328 x_1327 i_0)
			(rev_0 x_1329 xs_35)
			(drop_4 x_1330 x_1328 x_1329))
		false)))
(check-sat)
