
(set-logic HORN)
(define-fun Z_77 () Int 0)
(define-fun S_27 ((x Int)) Int (+ x 1))
(declare-fun projS_27 (Int Int) Bool)
(declare-fun isZ_27 (Int) Bool)
(declare-fun isS_27 (Int) Bool)
(assert (forall ((x_839 Int))
	(projS_27 x_839 (S_27 x_839))))
(assert (isZ_27 Z_77))
(assert (forall ((x_841 Int))
	(isS_27 (S_27 x_841))))
(declare-fun max_0 (Int Int Int) Bool)
(assert (forall ((x_830 Int) (x_828 Int) (z_78 Int))
	(=> (max_0 x_830 z_78 x_828) (max_0 (S_27 x_830) (S_27 z_78) (S_27 x_828)))))
(assert (forall ((z_78 Int))
	(max_0 (S_27 z_78) (S_27 z_78) Z_77)))
(assert (forall ((x_832 Int))
	(max_0 x_832 Z_77 x_832)))
(assert (forall ((x_833 Int) (x_834 Int) (x_835 Int) (x_836 Int) (a_1 Int) (b_1 Int) (c_1 Int))
	(=> (and true (distinct x_834 x_836) (max_0 x_833 a_1 b_1) (max_0 x_834 x_833 c_1) (max_0 x_835 b_1 c_1) (max_0 x_836 a_1 x_835)) false)))
(check-sat)