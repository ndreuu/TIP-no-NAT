
(set-logic HORN)
(define-fun Z_263 () Int 0)
(define-fun S_93 ((x Int)) Int (+ x 1))
(declare-fun diseqNat_93 (Int Int) Bool)
(declare-fun projS_91 (Int Int) Bool)
(declare-fun isZ_93 (Int) Bool)
(declare-fun isS_93 (Int) Bool)
(assert (forall ((x_2566 Int))
	(projS_91 x_2566 (S_93 x_2566))))
(assert (isZ_93 Z_263))
(assert (forall ((x_2568 Int))
	(isS_93 (S_93 x_2568))))
(assert (forall ((x_2569 Int))
	(diseqNat_93 Z_263 (S_93 x_2569))))
(assert (forall ((x_2570 Int))
	(diseqNat_93 (S_93 x_2570) Z_263)))
(assert (forall ((x_2571 Int) (x_2572 Int))
	(=> (diseqNat_93 x_2571 x_2572) (diseqNat_93 (S_93 x_2571) (S_93 x_2572)))))
(declare-fun x_2553 (Int Int Int) Bool)
(assert (forall ((x_2556 Int) (x_2555 Int) (z_264 Int))
	(=> (x_2553 x_2556 z_264 x_2555) (x_2553 x_2556 (S_93 z_264) (S_93 x_2555)))))
(assert (forall ((z_264 Int))
	(x_2553 (S_93 z_264) (S_93 z_264) Z_263)))
(assert (forall ((y_207 Int))
	(x_2553 Z_263 Z_263 y_207)))
(assert (forall ((x_2560 Int) (x_2561 Int) (x_2562 Int) (x_2563 Int) (m_8 Int) (n_20 Int) (k_2 Int))
	(=> (and true (diseqNat_93 x_2561 x_2563) (x_2553 x_2560 (S_93 m_8) n_20) (x_2553 x_2561 x_2560 (S_93 k_2)) (x_2553 x_2562 m_8 n_20) (x_2553 x_2563 x_2562 k_2)) false)))
(check-sat)