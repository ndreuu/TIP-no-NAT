
(set-logic HORN)
(define-fun zero_141 () Int 0)
(define-fun succ_137 ((x Int)) Int (+ x 1))
(declare-fun p_384 (Int Int) Bool)
(declare-fun iszero_137 (Int) Bool)
(declare-fun issucc_137 (Int) Bool)
(assert (forall ((x_53400 Int))
	(p_384 x_53400 (succ_137 x_53400))))
(assert (iszero_137 zero_141))
(assert (forall ((x_53402 Int))
	(issucc_137 (succ_137 x_53402))))
(assert (forall ((x_53403 Int))
	(distinct zero_141 (succ_137 x_53403))))
(assert (forall ((x_53404 Int))
	(distinct (succ_137 x_53404) zero_141)))
(assert (forall ((x_53405 Int) (x_53406 Int))
	(=> (distinct x_53405 x_53406) (distinct (succ_137 x_53405) (succ_137 x_53406)))))
(declare-fun addacc_20 (Int Int Int Int) Bool)
(assert (forall ((x_53389 Int) (x_53382 Int) (y_2097 Int) (z_1865 Int))
	(=> (addacc_20 x_53389 x_53382 (succ_137 y_2097) z_1865) (addacc_20 x_53389 (succ_137 x_53382) y_2097 z_1865))))
(assert (forall ((x_53391 Int) (x_53383 Int) (z_1865 Int))
	(=> (addacc_20 x_53391 zero_141 x_53383 (succ_137 z_1865)) (addacc_20 x_53391 zero_141 (succ_137 x_53383) z_1865))))
(assert (forall ((x_53393 Int))
	(addacc_20 x_53393 zero_141 zero_141 x_53393)))
(assert (forall ((x_53394 Int) (x_53395 Int) (x_53396 Int) (x_53397 Int) (x_53384 Int) (x_53385 Int) (x_53386 Int) (x_53387 Int) (x_53388 Int))
	(=> (and true (distinct x_53395 x_53397) (addacc_20 x_53394 x_53384 x_53385 x_53386) (addacc_20 x_53395 x_53394 x_53387 x_53388) (addacc_20 x_53396 x_53385 x_53386 x_53387) (addacc_20 x_53397 x_53384 x_53396 x_53388)) false)))
(check-sat)