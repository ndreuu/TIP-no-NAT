
(set-logic HORN)
(define-fun Z_362 () Int 0)
(define-fun S_127 ((x Int)) Int (+ x 1))
(declare-fun projS_123 (Int Int) Bool)
(declare-fun isZ_127 (Int) Bool)
(declare-fun isS_127 (Int) Bool)
(assert (forall ((x_3541 Int))
	(projS_123 x_3541 (S_127 x_3541))))
(assert (isZ_127 Z_362))
(assert (forall ((x_3543 Int))
	(isS_127 (S_127 x_3543))))
(declare-fun x_3531 (Int Int Int) Bool)
(assert (forall ((x_3534 Int) (x_3533 Int) (z_363 Int))
	(=> (x_3531 x_3534 z_363 x_3533) (x_3531 x_3534 (S_127 z_363) (S_127 x_3533)))))
(assert (forall ((z_363 Int))
	(x_3531 (S_127 z_363) (S_127 z_363) Z_362)))
(assert (forall ((y_288 Int))
	(x_3531 Z_362 Z_362 y_288)))
(assert (forall ((x_3538 Int) (m_12 Int))
	(=> (and true (distinct x_3538 Z_362) (x_3531 x_3538 m_12 m_12)) false)))
(check-sat)