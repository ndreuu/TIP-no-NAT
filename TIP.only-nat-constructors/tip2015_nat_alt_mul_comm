
(set-logic HORN)
(define-fun zero_40 () Int 0)
(define-fun succ_40 ((x Int)) Int (+ x 1))
(declare-fun p_120 (Int Int) Bool)
(declare-fun iszero_40 (Int) Bool)
(declare-fun issucc_40 (Int) Bool)
(assert (forall ((x_21928 Int))
	(p_120 x_21928 (succ_40 x_21928))))
(assert (iszero_40 zero_40))
(assert (forall ((x_21930 Int))
	(issucc_40 (succ_40 x_21930))))
(assert (forall ((x_21931 Int))
	(distinct zero_40 (succ_40 x_21931))))
(assert (forall ((x_21932 Int))
	(distinct (succ_40 x_21932) zero_40)))
(assert (forall ((x_21933 Int) (x_21934 Int))
	(=> (distinct x_21933 x_21934) (distinct (succ_40 x_21933) (succ_40 x_21934)))))
(declare-fun plus_36 (Int Int Int) Bool)
(assert (forall ((x_21907 Int) (z_821 Int) (y_820 Int))
	(=> (plus_36 x_21907 z_821 y_820) (plus_36 (succ_40 x_21907) (succ_40 z_821) y_820))))
(assert (forall ((x_21908 Int))
	(plus_36 x_21908 zero_40 x_21908)))
(declare-fun altmul_1 (Int Int Int) Bool)
(assert (forall ((x_21909 Int) (x_21910 Int) (x_21911 Int) (x_21912 Int) (x_21900 Int) (z_822 Int))
	(=> (and (altmul_1 x_21910 z_822 x_21900) (plus_36 x_21911 (succ_40 zero_40) x_21910) (plus_36 x_21912 x_21911 z_822) (plus_36 x_21909 x_21912 x_21900)) (altmul_1 x_21909 (succ_40 z_822) (succ_40 x_21900)))))
(assert (forall ((z_822 Int))
	(altmul_1 zero_40 (succ_40 z_822) zero_40)))
(assert (forall ((y_821 Int))
	(altmul_1 zero_40 zero_40 y_821)))
(assert (forall ((x_21916 Int) (x_21917 Int) (x_21901 Int) (y_822 Int))
	(=> (and true (distinct x_21916 x_21917) (altmul_1 x_21916 x_21901 y_822) (altmul_1 x_21917 y_822 x_21901)) false)))
(assert (forall ((x_21918 Int) (x_21919 Int) (x_21920 Int) (x_21921 Int) (x_21902 Int) (y_823 Int) (z_823 Int))
	(=> (and true (distinct x_21919 x_21921) (plus_36 x_21918 y_823 z_823) (plus_36 x_21919 x_21902 x_21918) (plus_36 x_21920 x_21902 y_823) (plus_36 x_21921 x_21920 z_823)) false)))
(assert (forall ((x_21922 Int) (x_21923 Int) (x_21903 Int) (y_824 Int))
	(=> (and true (distinct x_21922 x_21923) (plus_36 x_21922 x_21903 y_824) (plus_36 x_21923 y_824 x_21903)) false)))
(assert (forall ((x_21924 Int) (x_21904 Int))
	(=> (and true (distinct x_21924 x_21904) (plus_36 x_21924 x_21904 zero_40)) false)))
(assert (forall ((x_21925 Int) (x_21905 Int))
	(=> (and true (distinct x_21925 x_21905) (plus_36 x_21925 zero_40 x_21905)) false)))
(check-sat)