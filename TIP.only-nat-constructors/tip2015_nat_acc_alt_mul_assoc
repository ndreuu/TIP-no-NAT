
(set-logic HORN)
(define-fun zero_22 () Int 0)
(define-fun succ_22 ((x Int)) Int (+ x 1))
(declare-fun p_62 (Int Int) Bool)
(declare-fun iszero_22 (Int) Bool)
(declare-fun issucc_22 (Int) Bool)
(assert (forall ((x_15068 Int))
	(p_62 x_15068 (succ_22 x_15068))))
(assert (iszero_22 zero_22))
(assert (forall ((x_15070 Int))
	(issucc_22 (succ_22 x_15070))))
(assert (forall ((x_15071 Int))
	(distinct zero_22 (succ_22 x_15071))))
(assert (forall ((x_15072 Int))
	(distinct (succ_22 x_15072) zero_22)))
(assert (forall ((x_15073 Int) (x_15074 Int))
	(=> (distinct x_15073 x_15074) (distinct (succ_22 x_15073) (succ_22 x_15074)))))
(declare-fun accplus_2 (Int Int Int) Bool)
(assert (forall ((x_15053 Int) (z_626 Int) (y_585 Int))
	(=> (accplus_2 x_15053 z_626 (succ_22 y_585)) (accplus_2 x_15053 (succ_22 z_626) y_585))))
(assert (forall ((x_15055 Int))
	(accplus_2 x_15055 zero_22 x_15055)))
(declare-fun accaltmul_1 (Int Int Int) Bool)
(assert (forall ((x_15056 Int) (x_15057 Int) (x_15058 Int) (x_15051 Int) (z_627 Int))
	(=> (and (accaltmul_1 x_15057 z_627 x_15051) (accplus_2 x_15058 x_15051 x_15057) (accplus_2 x_15056 (succ_22 z_627) x_15058)) (accaltmul_1 x_15056 (succ_22 z_627) (succ_22 x_15051)))))
(assert (forall ((z_627 Int))
	(accaltmul_1 zero_22 (succ_22 z_627) zero_22)))
(assert (forall ((y_586 Int))
	(accaltmul_1 zero_22 zero_22 y_586)))
(assert (forall ((x_15062 Int) (x_15063 Int) (x_15064 Int) (x_15065 Int) (x_15052 Int) (y_587 Int) (z_628 Int))
	(=> (and true (distinct x_15063 x_15065) (accaltmul_1 x_15062 y_587 z_628) (accaltmul_1 x_15063 x_15052 x_15062) (accaltmul_1 x_15064 x_15052 y_587) (accaltmul_1 x_15065 x_15064 z_628)) false)))
(check-sat)