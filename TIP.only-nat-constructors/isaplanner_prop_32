
(set-logic HORN)
(define-fun Z_409 () Int 0)
(define-fun S_145 ((x Int)) Int (+ x 1))
(declare-fun projS_141 (Int Int) Bool)
(declare-fun isZ_145 (Int) Bool)
(declare-fun isS_145 (Int) Bool)
(assert (forall ((x_3959 Int))
	(projS_141 x_3959 (S_145 x_3959))))
(assert (isZ_145 Z_409))
(assert (forall ((x_3961 Int))
	(isS_145 (S_145 x_3961))))
(declare-fun min_3 (Int Int Int) Bool)
(assert (forall ((x_3952 Int) (y_324 Int) (z_410 Int))
	(=> (min_3 x_3952 z_410 y_324) (min_3 (S_145 x_3952) (S_145 z_410) (S_145 y_324)))))
(assert (forall ((z_410 Int))
	(min_3 Z_409 (S_145 z_410) Z_409)))
(assert (forall ((y_323 Int))
	(min_3 Z_409 Z_409 y_323)))
(assert (forall ((x_3955 Int) (x_3956 Int) (a_8 Int) (b_7 Int))
	(=> (and true (distinct x_3955 x_3956) (min_3 x_3955 a_8 b_7) (min_3 x_3956 b_7 a_8)) false)))
(check-sat)