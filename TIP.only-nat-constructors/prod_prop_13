
(set-logic HORN)
(define-fun Z_2050 () Int 0)
(define-fun S_469 ((x Int)) Int (+ x 1))
(declare-fun projS_191 (Int Int) Bool)
(declare-fun isZ_436 (Int) Bool)
(declare-fun isS_436 (Int) Bool)
(assert (forall ((x_55339 Int))
	(projS_191 x_55339 (S_469 x_55339))))
(assert (isZ_436 Z_2050))
(assert (forall ((x_55341 Int))
	(isS_436 (S_469 x_55341))))
(assert (forall ((x_55342 Int))
	(distinct Z_2050 (S_469 x_55342))))
(assert (forall ((x_55343 Int))
	(distinct (S_469 x_55343) Z_2050)))
(assert (forall ((x_55344 Int) (x_55345 Int))
	(=> (distinct x_55344 x_55345) (distinct (S_469 x_55344) (S_469 x_55345)))))
(declare-fun half_2 (Int Int) Bool)
(assert (forall ((x_55329 Int) (z_2051 Int))
	(=> (half_2 x_55329 z_2051) (half_2 (S_469 x_55329) (S_469 (S_469 z_2051))))))
(assert (half_2 Z_2050 (S_469 Z_2050)))
(assert (half_2 Z_2050 Z_2050))
(declare-fun x_55325 (Int Int Int) Bool)
(assert (forall ((x_55333 Int) (z_2052 Int) (y_2286 Int))
	(=> (x_55325 x_55333 z_2052 y_2286) (x_55325 (S_469 x_55333) (S_469 z_2052) y_2286))))
(assert (forall ((x_55334 Int))
	(x_55325 x_55334 Z_2050 x_55334)))
(assert (forall ((x_55335 Int) (x_55336 Int) (x_55327 Int))
	(=> (and true (distinct x_55336 x_55327) (x_55325 x_55335 x_55327 x_55327) (half_2 x_55336 x_55335)) false)))
(check-sat)