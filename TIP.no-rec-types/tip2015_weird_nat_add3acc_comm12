
(set-logic HORN)
(define-fun zero_101 () Int 0)
(define-fun succ_99 ((x Int)) Int (+ x 1))
(declare-fun p_287 (Int Int) Bool)
(declare-fun iszero_99 (Int) Bool)
(declare-fun issucc_99 (Int) Bool)
(assert (forall ((x_46414 Int))
	(p_287 x_46414 (succ_99 x_46414))))
(assert (iszero_99 zero_101))
(assert (forall ((x_46416 Int))
	(issucc_99 (succ_99 x_46416))))
(declare-fun addacc_14 (Int Int Int Int) Bool)
(assert (forall ((x_46405 Int) (x_46402 Int) (y_1661 Int) (z_1496 Int))
	(=> (addacc_14 x_46405 x_46402 (succ_99 y_1661) z_1496) (addacc_14 x_46405 (succ_99 x_46402) y_1661 z_1496))))
(assert (forall ((x_46407 Int) (x_46403 Int) (z_1496 Int))
	(=> (addacc_14 x_46407 zero_101 x_46403 (succ_99 z_1496)) (addacc_14 x_46407 zero_101 (succ_99 x_46403) z_1496))))
(assert (forall ((x_46409 Int))
	(addacc_14 x_46409 zero_101 zero_101 x_46409)))
(assert (forall ((x_46410 Int) (x_46411 Int) (x_46404 Int) (y_1662 Int) (z_1497 Int))
	(=> (and true (distinct x_46410 x_46411) (addacc_14 x_46410 x_46404 y_1662 z_1497) (addacc_14 x_46411 y_1662 x_46404 z_1497)) false)))
(check-sat)