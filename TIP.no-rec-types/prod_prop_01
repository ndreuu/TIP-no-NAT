
(set-logic HORN)
(define-fun Z_2071 () Int 0)
(define-fun S_476 ((x Int)) Int (+ x 1))
(declare-fun projS_195 (Int Int) Bool)
(declare-fun isZ_443 (Int) Bool)
(declare-fun isS_443 (Int) Bool)
(assert (forall ((x_55570 Int))
	(projS_195 x_55570 (S_476 x_55570))))
(assert (isZ_443 Z_2071))
(assert (forall ((x_55572 Int))
	(isS_443 (S_476 x_55572))))
(declare-fun double_0 (Int Int) Bool)
(assert (forall ((x_55561 Int) (y_2307 Int))
	(=> (double_0 x_55561 y_2307) (double_0 (S_476 (S_476 x_55561)) (S_476 y_2307)))))
(assert (double_0 Z_2071 Z_2071))
(declare-fun x_55557 (Int Int Int) Bool)
(assert (forall ((x_55564 Int) (z_2072 Int) (y_2308 Int))
	(=> (x_55557 x_55564 z_2072 y_2308) (x_55557 (S_476 x_55564) (S_476 z_2072) y_2308))))
(assert (forall ((x_55565 Int))
	(x_55557 x_55565 Z_2071 x_55565)))
(assert (forall ((x_55566 Int) (x_55567 Int) (x_55559 Int))
	(=> (and true (distinct x_55566 x_55567) (double_0 x_55566 x_55559) (x_55557 x_55567 x_55559 x_55559)) false)))
(check-sat)