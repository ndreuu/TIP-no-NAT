
(set-logic HORN)
(define-fun zero_17 () Int 0)
(define-fun succ_17 ((x Int)) Int (+ x 1))
(declare-fun p_49 (Int Int) Bool)
(declare-fun iszero_17 (Int) Bool)
(declare-fun issucc_17 (Int) Bool)
(assert (forall ((x_12324 Int))
	(p_49 x_12324 (succ_17 x_12324))))
(assert (iszero_17 zero_17))
(assert (forall ((x_12326 Int))
	(issucc_17 (succ_17 x_12326))))
(declare-fun plus_14 (Int Int Int) Bool)
(assert (forall ((x_12277 Int) (z_568 Int) (y_511 Int))
	(=> (plus_14 x_12277 z_568 y_511) (plus_14 (succ_17 x_12277) (succ_17 z_568) y_511))))
(assert (forall ((x_12278 Int))
	(plus_14 x_12278 zero_17 x_12278)))
(declare-fun times_0 (Int Int Int) Bool)
(assert (forall ((x_12279 Int) (x_12280 Int) (z_569 Int) (y_512 Int))
	(=> (and (times_0 x_12280 z_569 y_512) (plus_14 x_12279 y_512 x_12280)) (times_0 x_12279 (succ_17 z_569) y_512))))
(assert (forall ((y_512 Int))
	(times_0 zero_17 zero_17 y_512)))
(declare-fun accplus_1 (Int Int Int) Bool)
(assert (forall ((x_12283 Int) (z_570 Int) (y_513 Int))
	(=> (accplus_1 x_12283 z_570 (succ_17 y_513)) (accplus_1 x_12283 (succ_17 z_570) y_513))))
(assert (forall ((x_12285 Int))
	(accplus_1 x_12285 zero_17 x_12285)))
(declare-fun accaltmul_0 (Int Int Int) Bool)
(assert (forall ((x_12286 Int) (x_12287 Int) (x_12288 Int) (x_12262 Int) (z_571 Int))
	(=> (and (accaltmul_0 x_12287 z_571 x_12262) (accplus_1 x_12288 x_12262 x_12287) (accplus_1 x_12286 (succ_17 z_571) x_12288)) (accaltmul_0 x_12286 (succ_17 z_571) (succ_17 x_12262)))))
(assert (forall ((z_571 Int))
	(accaltmul_0 zero_17 (succ_17 z_571) zero_17)))
(assert (forall ((y_514 Int))
	(accaltmul_0 zero_17 zero_17 y_514)))
(assert (forall ((x_12292 Int) (x_12293 Int) (x_12263 Int) (y_515 Int))
	(=> (and true (distinct x_12292 x_12293) (accaltmul_0 x_12292 x_12263 y_515) (times_0 x_12293 x_12263 y_515)) false)))
(assert (forall ((x_12294 Int) (x_12295 Int) (x_12296 Int) (x_12297 Int) (x_12264 Int) (y_516 Int) (z_572 Int))
	(=> (and true (distinct x_12295 x_12297) (times_0 x_12294 y_516 z_572) (times_0 x_12295 x_12264 x_12294) (times_0 x_12296 x_12264 y_516) (times_0 x_12297 x_12296 z_572)) false)))
(assert (forall ((x_12298 Int) (x_12299 Int) (x_12300 Int) (x_12301 Int) (x_12265 Int) (y_517 Int) (z_573 Int))
	(=> (and true (distinct x_12299 x_12301) (plus_14 x_12298 y_517 z_573) (plus_14 x_12299 x_12265 x_12298) (plus_14 x_12300 x_12265 y_517) (plus_14 x_12301 x_12300 z_573)) false)))
(assert (forall ((x_12302 Int) (x_12303 Int) (x_12266 Int) (y_518 Int))
	(=> (and true (distinct x_12302 x_12303) (times_0 x_12302 x_12266 y_518) (times_0 x_12303 y_518 x_12266)) false)))
(assert (forall ((x_12304 Int) (x_12305 Int) (x_12267 Int) (y_519 Int))
	(=> (and true (distinct x_12304 x_12305) (plus_14 x_12304 x_12267 y_519) (plus_14 x_12305 y_519 x_12267)) false)))
(assert (forall ((x_12306 Int) (x_12307 Int) (x_12308 Int) (x_12309 Int) (x_12310 Int) (x_12268 Int) (y_520 Int) (z_574 Int))
	(=> (and true (distinct x_12307 x_12310) (plus_14 x_12306 y_520 z_574) (times_0 x_12307 x_12268 x_12306) (times_0 x_12308 x_12268 y_520) (times_0 x_12309 x_12268 z_574) (plus_14 x_12310 x_12308 x_12309)) false)))
(assert (forall ((x_12311 Int) (x_12312 Int) (x_12313 Int) (x_12314 Int) (x_12315 Int) (x_12269 Int) (y_521 Int) (z_575 Int))
	(=> (and true (distinct x_12312 x_12315) (plus_14 x_12311 x_12269 y_521) (times_0 x_12312 x_12311 z_575) (times_0 x_12313 x_12269 z_575) (times_0 x_12314 y_521 z_575) (plus_14 x_12315 x_12313 x_12314)) false)))
(assert (forall ((x_12316 Int) (x_12270 Int))
	(=> (and true (distinct x_12316 x_12270) (times_0 x_12316 x_12270 (succ_17 zero_17))) false)))
(assert (forall ((x_12317 Int) (x_12271 Int))
	(=> (and true (distinct x_12317 x_12271) (times_0 x_12317 (succ_17 zero_17) x_12271)) false)))
(assert (forall ((x_12318 Int) (x_12272 Int))
	(=> (and true (distinct x_12318 x_12272) (plus_14 x_12318 x_12272 zero_17)) false)))
(assert (forall ((x_12319 Int) (x_12273 Int))
	(=> (and true (distinct x_12319 x_12273) (plus_14 x_12319 zero_17 x_12273)) false)))
(assert (forall ((x_12320 Int) (x_12274 Int))
	(=> (and true (distinct x_12320 zero_17) (times_0 x_12320 x_12274 zero_17)) false)))
(assert (forall ((x_12321 Int) (x_12275 Int))
	(=> (and true (distinct x_12321 zero_17) (times_0 x_12321 zero_17 x_12275)) false)))
(check-sat)