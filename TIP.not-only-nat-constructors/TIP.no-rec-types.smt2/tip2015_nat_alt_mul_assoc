(set-logic HORN)
(define-fun zero_3 () Int 0)
(define-fun succ_3 ((x Int)) Int (+ x 1))
(declare-fun p_7 (Int Int) Bool)
(declare-fun iszero_3 (Int) Bool)
(declare-fun issucc_3 (Int) Bool)
(assert (forall ((x_4357 Int))
	(p_7 x_4357 (succ_3 x_4357))))
(assert (iszero_3 zero_3))
(assert (forall ((x_4359 Int))
	(issucc_3 (succ_3 x_4359))))
(declare-fun plus_2 (Int Int Int) Bool)
(assert (forall ((x_4334 Int) (z_446 Int) (y_357 Int))
	(=> (plus_2 x_4334 z_446 y_357) (plus_2 (succ_3 x_4334) (succ_3 z_446) y_357))))
(assert (forall ((x_4335 Int))
	(plus_2 x_4335 zero_3 x_4335)))
(declare-fun altmul_0 (Int Int Int) Bool)
(assert (forall ((x_4336 Int) (x_4337 Int) (x_4338 Int) (x_4339 Int) (x_4327 Int) (z_447 Int))
	(=> (and (altmul_0 x_4337 z_447 x_4327) (plus_2 x_4338 (succ_3 zero_3) x_4337) (plus_2 x_4339 x_4338 z_447) (plus_2 x_4336 x_4339 x_4327)) (altmul_0 x_4336 (succ_3 z_447) (succ_3 x_4327)))))
(assert (forall ((z_447 Int))
	(altmul_0 zero_3 (succ_3 z_447) zero_3)))
(assert (forall ((y_358 Int))
	(altmul_0 zero_3 zero_3 y_358)))
(assert (forall ((x_4343 Int) (x_4344 Int) (x_4345 Int) (x_4346 Int) (x_4328 Int) (y_359 Int) (z_448 Int))
	(=> (and true (distinct x_4344 x_4346) (altmul_0 x_4343 y_359 z_448) (altmul_0 x_4344 x_4328 x_4343) (altmul_0 x_4345 x_4328 y_359) (altmul_0 x_4346 x_4345 z_448)) false)))
(assert (forall ((x_4347 Int) (x_4348 Int) (x_4349 Int) (x_4350 Int) (x_4329 Int) (y_360 Int) (z_449 Int))
	(=> (and true (distinct x_4348 x_4350) (plus_2 x_4347 y_360 z_449) (plus_2 x_4348 x_4329 x_4347) (plus_2 x_4349 x_4329 y_360) (plus_2 x_4350 x_4349 z_449)) false)))
(assert (forall ((x_4351 Int) (x_4352 Int) (x_4330 Int) (y_361 Int))
	(=> (and true (distinct x_4351 x_4352) (plus_2 x_4351 x_4330 y_361) (plus_2 x_4352 y_361 x_4330)) false)))
(assert (forall ((x_4353 Int) (x_4331 Int))
	(=> (and true (distinct x_4353 x_4331) (plus_2 x_4353 x_4331 zero_3)) false)))
(assert (forall ((x_4354 Int) (x_4332 Int))
	(=> (and true (distinct x_4354 x_4332) (plus_2 x_4354 zero_3 x_4332)) false)))
(check-sat)
