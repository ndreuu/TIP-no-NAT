(set-logic HORN)
(define-fun zero_51 () Int 0)
(define-fun succ_50 ((x Int)) Int (+ x 1))
(declare-fun p_145 (Int Int) Bool)
(declare-fun iszero_50 (Int) Bool)
(declare-fun issucc_50 (Int) Bool)
(assert (forall ((x_25415 Int))
	(p_145 x_25415 (succ_50 x_25415))))
(assert (iszero_50 zero_51))
(assert (forall ((x_25417 Int))
	(issucc_50 (succ_50 x_25417))))
(declare-fun plus_50 (Int Int Int) Bool)
(assert (forall ((x_25398 Int) (z_926 Int) (y_944 Int))
	(=> (plus_50 x_25398 z_926 y_944) (plus_50 (succ_50 x_25398) (succ_50 z_926) y_944))))
(assert (forall ((x_25399 Int))
	(plus_50 x_25399 zero_51 x_25399)))
(declare-fun accplus_3 (Int Int Int) Bool)
(assert (forall ((x_25400 Int) (z_927 Int) (y_945 Int))
	(=> (accplus_3 x_25400 z_927 (succ_50 y_945)) (accplus_3 x_25400 (succ_50 z_927) y_945))))
(assert (forall ((x_25402 Int))
	(accplus_3 x_25402 zero_51 x_25402)))
(assert (forall ((x_25403 Int) (x_25404 Int) (x_25392 Int) (y_946 Int))
	(=> (and true (distinct x_25403 x_25404) (plus_50 x_25403 x_25392 y_946) (accplus_3 x_25404 x_25392 y_946)) false)))
(assert (forall ((x_25405 Int) (x_25406 Int) (x_25407 Int) (x_25408 Int) (x_25393 Int) (y_947 Int) (z_928 Int))
	(=> (and true (distinct x_25406 x_25408) (plus_50 x_25405 y_947 z_928) (plus_50 x_25406 x_25393 x_25405) (plus_50 x_25407 x_25393 y_947) (plus_50 x_25408 x_25407 z_928)) false)))
(assert (forall ((x_25409 Int) (x_25410 Int) (x_25394 Int) (y_948 Int))
	(=> (and true (distinct x_25409 x_25410) (plus_50 x_25409 x_25394 y_948) (plus_50 x_25410 y_948 x_25394)) false)))
(assert (forall ((x_25411 Int) (x_25395 Int))
	(=> (and true (distinct x_25411 x_25395) (plus_50 x_25411 x_25395 zero_51)) false)))
(assert (forall ((x_25412 Int) (x_25396 Int))
	(=> (and true (distinct x_25412 x_25396) (plus_50 x_25412 zero_51 x_25396)) false)))
(check-sat)
