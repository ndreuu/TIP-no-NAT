(set-logic HORN)
(define-fun zero_134 () Int 0)
(define-fun succ_130 ((x Int)) Int (+ x 1))
(declare-fun p_365 (Int Int) Bool)
(declare-fun iszero_130 (Int) Bool)
(declare-fun issucc_130 (Int) Bool)
(assert (forall ((x_52382 Int))
	(p_365 x_52382 (succ_130 x_52382))))
(assert (iszero_130 zero_134))
(assert (forall ((x_52384 Int))
	(issucc_130 (succ_130 x_52384))))
(declare-fun op_3 (Int Int Int Int Int) Bool)
(assert (forall ((x_52371 Int) (x_52369 Int) (x_52367 Int) (y_2005 Int) (x_52368 Int))
	(=> (op_3 x_52371 x_52367 y_2005 x_52369 (succ_130 x_52368)) (op_3 x_52371 x_52367 y_2005 (succ_130 x_52369) x_52368))))
(assert (forall ((x_52373 Int) (x_52370 Int) (y_2005 Int) (x_52368 Int))
	(=> (op_3 x_52373 x_52370 y_2005 y_2005 x_52368) (op_3 x_52373 (succ_130 x_52370) y_2005 zero_134 x_52368))))
(assert (forall ((y_2005 Int) (x_52368 Int))
	(op_3 x_52368 zero_134 y_2005 zero_134 x_52368)))
(assert (forall ((x_52376 Int) (x_52377 Int) (x_52378 Int) (x_52379 Int) (a_52 Int) (b_33 Int) (c_20 Int) (d_5 Int) (e_0 Int))
	(=> (and true (distinct x_52377 x_52379) (op_3 x_52376 a_52 b_33 zero_134 zero_134) (op_3 x_52377 x_52376 c_20 d_5 e_0) (op_3 x_52378 b_33 c_20 zero_134 zero_134) (op_3 x_52379 a_52 x_52378 d_5 e_0)) false)))
(check-sat)
