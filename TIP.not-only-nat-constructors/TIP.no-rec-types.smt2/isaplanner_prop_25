(set-logic HORN)
(define-fun Z_158 () Int 0)
(define-fun S_55 ((x Int)) Int (+ x 1))
(declare-datatypes ((Bool_29 0)) (((false_29) (true_29))))
(declare-fun diseqBool_9 (Bool_29 Bool_29) Bool)
(declare-fun isfalse_9 (Bool_29) Bool)
(declare-fun istrue_9 (Bool_29) Bool)
(assert (isfalse_9 false_29))
(assert (istrue_9 true_29))
(assert (diseqBool_9 false_29 true_29))
(assert (diseqBool_9 true_29 false_29))
(declare-fun and_29 (Bool_29 Bool_29 Bool_29) Bool)
(declare-fun or_29 (Bool_29 Bool_29 Bool_29) Bool)
(declare-fun hence_29 (Bool_29 Bool_29 Bool_29) Bool)
(declare-fun not_29 (Bool_29 Bool_29) Bool)
(assert (and_29 false_29 false_29 false_29))
(assert (and_29 false_29 true_29 false_29))
(assert (and_29 false_29 false_29 true_29))
(assert (and_29 true_29 true_29 true_29))
(assert (or_29 false_29 false_29 false_29))
(assert (or_29 true_29 true_29 false_29))
(assert (or_29 true_29 false_29 true_29))
(assert (or_29 true_29 true_29 true_29))
(assert (hence_29 true_29 false_29 false_29))
(assert (hence_29 false_29 true_29 false_29))
(assert (hence_29 true_29 false_29 true_29))
(assert (hence_29 true_29 true_29 true_29))
(assert (not_29 true_29 false_29))
(assert (not_29 false_29 true_29))
(declare-fun projS_53 (Int Int) Bool)
(declare-fun isZ_55 (Int) Bool)
(declare-fun isS_55 (Int) Bool)
(assert (forall ((x_1632 Int))
	(projS_53 x_1632 (S_55 x_1632))))
(assert (isZ_55 Z_158))
(assert (forall ((x_1634 Int))
	(isS_55 (S_55 x_1634))))
(declare-fun max_2 (Int Int Int) Bool)
(assert (forall ((x_1613 Int) (x_1605 Int) (z_159 Int))
	(=> (max_2 x_1613 z_159 x_1605) (max_2 (S_55 x_1613) (S_55 z_159) (S_55 x_1605)))))
(assert (forall ((z_159 Int))
	(max_2 (S_55 z_159) (S_55 z_159) Z_158)))
(assert (forall ((x_1615 Int))
	(max_2 x_1615 Z_158 x_1615)))
(declare-fun x_1606 (Bool_29 Int Int) Bool)
(assert (forall ((x Int) (y Int))
	(=> (distinct x y) (x_1606 false_29 x y))))
(assert (forall ((x Int) (y Int))
	(=> (= x y) (x_1606 true_29 x y))))
(declare-fun x_1609 (Bool_29 Int Int) Bool)
(assert (forall ((x_1621 Bool_29) (x_1611 Int) (z_161 Int))
	(=> (x_1609 x_1621 z_161 x_1611) (x_1609 x_1621 (S_55 z_161) (S_55 x_1611)))))
(assert (forall ((z_161 Int))
	(x_1609 false_29 (S_55 z_161) Z_158)))
(assert (forall ((y_129 Int))
	(x_1609 true_29 Z_158 y_129)))
(assert (forall ((x_1625 Int) (x_1626 Bool_29) (x_1627 Bool_29) (a_4 Int) (b_4 Int))
	(=> (and true (diseqBool_9 x_1626 x_1627) (max_2 x_1625 a_4 b_4) (x_1606 x_1626 x_1625 b_4) (x_1609 x_1627 a_4 b_4)) false)))
(check-sat)
