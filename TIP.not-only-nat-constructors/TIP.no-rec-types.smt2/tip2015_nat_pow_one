(set-logic HORN)
(define-fun zero_30 () Int 0)
(define-fun succ_30 ((x Int)) Int (+ x 1))
(declare-fun p_90 (Int Int) Bool)
(declare-fun iszero_30 (Int) Bool)
(declare-fun issucc_30 (Int) Bool)
(assert (forall ((x_18727 Int))
	(p_90 x_18727 (succ_30 x_18727))))
(assert (iszero_30 zero_30))
(assert (forall ((x_18729 Int))
	(issucc_30 (succ_30 x_18729))))
(declare-fun plus_29 (Int Int Int) Bool)
(assert (forall ((x_18686 Int) (z_740 Int) (y_725 Int))
	(=> (plus_29 x_18686 z_740 y_725) (plus_29 (succ_30 x_18686) (succ_30 z_740) y_725))))
(assert (forall ((x_18687 Int))
	(plus_29 x_18687 zero_30 x_18687)))
(declare-fun times_7 (Int Int Int) Bool)
(assert (forall ((x_18688 Int) (x_18689 Int) (z_741 Int) (y_726 Int))
	(=> (and (times_7 x_18689 z_741 y_726) (plus_29 x_18688 y_726 x_18689)) (times_7 x_18688 (succ_30 z_741) y_726))))
(assert (forall ((y_726 Int))
	(times_7 zero_30 zero_30 y_726)))
(declare-fun formulapow_0 (Int Int Int) Bool)
(assert (forall ((x_18692 Int) (x_18693 Int) (z_742 Int) (x_18671 Int))
	(=> (and (formulapow_0 x_18693 x_18671 z_742) (times_7 x_18692 x_18671 x_18693)) (formulapow_0 x_18692 x_18671 (succ_30 z_742)))))
(assert (forall ((x_18671 Int))
	(formulapow_0 (succ_30 zero_30) x_18671 zero_30)))
(assert (forall ((x_18696 Int) (x_18672 Int))
	(=> (and true (distinct x_18696 (succ_30 zero_30)) (formulapow_0 x_18696 (succ_30 zero_30) x_18672)) false)))
(assert (forall ((x_18697 Int) (x_18698 Int) (x_18699 Int) (x_18700 Int) (x_18673 Int) (y_728 Int) (z_743 Int))
	(=> (and true (distinct x_18698 x_18700) (times_7 x_18697 y_728 z_743) (times_7 x_18698 x_18673 x_18697) (times_7 x_18699 x_18673 y_728) (times_7 x_18700 x_18699 z_743)) false)))
(assert (forall ((x_18701 Int) (x_18702 Int) (x_18703 Int) (x_18704 Int) (x_18674 Int) (y_729 Int) (z_744 Int))
	(=> (and true (distinct x_18702 x_18704) (plus_29 x_18701 y_729 z_744) (plus_29 x_18702 x_18674 x_18701) (plus_29 x_18703 x_18674 y_729) (plus_29 x_18704 x_18703 z_744)) false)))
(assert (forall ((x_18705 Int) (x_18706 Int) (x_18675 Int) (y_730 Int))
	(=> (and true (distinct x_18705 x_18706) (times_7 x_18705 x_18675 y_730) (times_7 x_18706 y_730 x_18675)) false)))
(assert (forall ((x_18707 Int) (x_18708 Int) (x_18676 Int) (y_731 Int))
	(=> (and true (distinct x_18707 x_18708) (plus_29 x_18707 x_18676 y_731) (plus_29 x_18708 y_731 x_18676)) false)))
(assert (forall ((x_18709 Int) (x_18710 Int) (x_18711 Int) (x_18712 Int) (x_18713 Int) (x_18677 Int) (y_732 Int) (z_745 Int))
	(=> (and true (distinct x_18710 x_18713) (plus_29 x_18709 y_732 z_745) (times_7 x_18710 x_18677 x_18709) (times_7 x_18711 x_18677 y_732) (times_7 x_18712 x_18677 z_745) (plus_29 x_18713 x_18711 x_18712)) false)))
(assert (forall ((x_18714 Int) (x_18715 Int) (x_18716 Int) (x_18717 Int) (x_18718 Int) (x_18678 Int) (y_733 Int) (z_746 Int))
	(=> (and true (distinct x_18715 x_18718) (plus_29 x_18714 x_18678 y_733) (times_7 x_18715 x_18714 z_746) (times_7 x_18716 x_18678 z_746) (times_7 x_18717 y_733 z_746) (plus_29 x_18718 x_18716 x_18717)) false)))
(assert (forall ((x_18719 Int) (x_18679 Int))
	(=> (and true (distinct x_18719 x_18679) (times_7 x_18719 x_18679 (succ_30 zero_30))) false)))
(assert (forall ((x_18720 Int) (x_18680 Int))
	(=> (and true (distinct x_18720 x_18680) (times_7 x_18720 (succ_30 zero_30) x_18680)) false)))
(assert (forall ((x_18721 Int) (x_18681 Int))
	(=> (and true (distinct x_18721 x_18681) (plus_29 x_18721 x_18681 zero_30)) false)))
(assert (forall ((x_18722 Int) (x_18682 Int))
	(=> (and true (distinct x_18722 x_18682) (plus_29 x_18722 zero_30 x_18682)) false)))
(assert (forall ((x_18723 Int) (x_18683 Int))
	(=> (and true (distinct x_18723 zero_30) (times_7 x_18723 x_18683 zero_30)) false)))
(assert (forall ((x_18724 Int) (x_18684 Int))
	(=> (and true (distinct x_18724 zero_30) (times_7 x_18724 zero_30 x_18684)) false)))
(check-sat)
