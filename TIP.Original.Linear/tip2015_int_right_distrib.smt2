(set-logic HORN)
(declare-datatypes ((Sign_2 0)) (((Pos_1 ) (Neg_1 ))))
(declare-fun diseqSign_1 (Sign_2 Sign_2) Bool)
(declare-fun isPos_1 (Sign_2) Bool)
(declare-fun isNeg_1 (Sign_2) Bool)
(assert (isPos_1 Pos_1))
(assert (isNeg_1 Neg_1))
(assert (diseqSign_1 Pos_1 Neg_1))
(assert (diseqSign_1 Neg_1 Pos_1))
(declare-datatypes ((Nat_220 0)) (((zero_26 ) (succ_26 (p_74 Nat_220)))))
(declare-fun diseqNat_220 (Nat_220 Nat_220) Bool)
(declare-fun p_76 (Nat_220 Nat_220) Bool)
(declare-fun iszero_26 (Nat_220) Bool)
(declare-fun issucc_26 (Nat_220) Bool)
(assert (forall ((x_17906 Nat_220))
	(p_76 x_17906 (succ_26 x_17906))))
(assert (iszero_26 zero_26))
(assert (forall ((x_17908 Nat_220))
	(issucc_26 (succ_26 x_17908))))
(assert (forall ((x_17909 Nat_220))
	(diseqNat_220 zero_26 (succ_26 x_17909))))
(assert (forall ((x_17910 Nat_220))
	(diseqNat_220 (succ_26 x_17910) zero_26)))
(assert (forall ((x_17911 Nat_220) (x_17912 Nat_220))
	(=> (diseqNat_220 x_17911 x_17912)
	    (diseqNat_220 (succ_26 x_17911) (succ_26 x_17912)))))
(declare-datatypes ((Integer_1 0)) (((P_75 (projP_2 Nat_220)) (N_39 (projN_2 Nat_220)))))
(declare-fun diseqInteger_1 (Integer_1 Integer_1) Bool)
(declare-fun projP_3 (Nat_220 Integer_1) Bool)
(declare-fun projN_3 (Nat_220 Integer_1) Bool)
(declare-fun isP_1 (Integer_1) Bool)
(declare-fun isN_1 (Integer_1) Bool)
(assert (forall ((x_17913 Nat_220))
	(projP_3 x_17913 (P_75 x_17913))))
(assert (forall ((x_17915 Nat_220))
	(projN_3 x_17915 (N_39 x_17915))))
(assert (forall ((x_17917 Nat_220))
	(isP_1 (P_75 x_17917))))
(assert (forall ((x_17918 Nat_220))
	(isN_1 (N_39 x_17918))))
(assert (forall ((x_17919 Nat_220) (x_17920 Nat_220))
	(diseqInteger_1 (P_75 x_17919) (N_39 x_17920))))
(assert (forall ((x_17921 Nat_220) (x_17922 Nat_220))
	(diseqInteger_1 (N_39 x_17921) (P_75 x_17922))))
(assert (forall ((x_17923 Nat_220) (x_17924 Nat_220))
	(=> (diseqNat_220 x_17923 x_17924)
	    (diseqInteger_1 (P_75 x_17923) (P_75 x_17924)))))
(assert (forall ((x_17925 Nat_220) (x_17926 Nat_220))
	(=> (diseqNat_220 x_17925 x_17926)
	    (diseqInteger_1 (N_39 x_17925) (N_39 x_17926)))))
(declare-fun toInteger_1 (Integer_1 Sign_2 Nat_220) Bool)
(assert (forall ((z_675 Nat_220))
	(toInteger_1 (N_39 z_675) Neg_1 (succ_26 z_675))))
(assert (toInteger_1 (P_75 zero_26) Neg_1 zero_26))
(assert (forall ((y_649 Nat_220))
	(toInteger_1 (P_75 y_649) Pos_1 y_649)))
(declare-fun sign_3 (Sign_2 Integer_1) Bool)
(assert (forall ((z_676 Nat_220))
	(sign_3 Neg_1 (N_39 z_676))))
(assert (forall ((y_650 Nat_220))
	(sign_3 Pos_1 (P_75 y_650))))
(declare-fun plus_26 (Nat_220 Nat_220 Nat_220) Bool)
(assert (forall ((x_17824 Nat_220) (z_677 Nat_220) (y_651 Nat_220))
	(=> (plus_26 x_17824 z_677 y_651)
	    (plus_26 (succ_26 x_17824) (succ_26 z_677) y_651))))
(assert (forall ((x_17825 Nat_220))
	(plus_26 x_17825 zero_26 x_17825)))
(declare-fun times_5 (Nat_220 Nat_220 Nat_220) Bool)
(assert (forall ((x_17826 Nat_220) (x_17827 Nat_220) (z_678 Nat_220) (y_652 Nat_220))
	(=>	(and (times_5 x_17827 z_678 y_652)
			(plus_26 x_17826 y_652 x_17827))
		(times_5 x_17826 (succ_26 z_678) y_652))))
(assert (forall ((y_652 Nat_220))
	(times_5 zero_26 zero_26 y_652)))
(declare-fun opposite_1 (Sign_2 Sign_2) Bool)
(assert (opposite_1 Pos_1 Neg_1))
(assert (opposite_1 Neg_1 Pos_1))
(declare-fun timesSign_1 (Sign_2 Sign_2 Sign_2) Bool)
(assert (forall ((x_17832 Sign_2) (y_653 Sign_2))
	(=> (opposite_1 x_17832 y_653)
	    (timesSign_1 x_17832 Neg_1 y_653))))
(assert (forall ((x_17834 Sign_2))
	(timesSign_1 x_17834 Pos_1 x_17834)))
(declare-fun absVal_1 (Nat_220 Integer_1) Bool)
(assert (forall ((x_17835 Nat_220) (m_18 Nat_220))
	(=> (plus_26 x_17835 (succ_26 zero_26) m_18)
	    (absVal_1 x_17835 (N_39 m_18)))))
(assert (forall ((n_40 Nat_220))
	(absVal_1 n_40 (P_75 n_40))))
(declare-fun times_6 (Integer_1 Integer_1 Integer_1) Bool)
(assert (forall ((x_17838 Integer_1) (x_17839 Sign_2) (x_17840 Sign_2) (x_17841 Sign_2) (x_17842 Nat_220) (x_17843 Nat_220) (x_17844 Nat_220) (x_17798 Integer_1) (y_654 Integer_1))
	(=>	(and (sign_3 x_17839 x_17798)
			(sign_3 x_17840 y_654)
			(timesSign_1 x_17841 x_17839 x_17840)
			(absVal_1 x_17842 x_17798)
			(absVal_1 x_17843 y_654)
			(times_5 x_17844 x_17842 x_17843)
			(toInteger_1 x_17838 x_17841 x_17844))
		(times_6 x_17838 x_17798 y_654))))
(declare-fun x_17799 (Integer_1 Nat_220 Nat_220) Bool)
(assert (forall ((x_17801 Nat_220) (z_679 Nat_220) (fail_3 Integer_1))
	(=> (x_17799 fail_3 x_17801 z_679)
	    (x_17799 fail_3 (succ_26 x_17801) (succ_26 z_679)))))
(assert (forall ((x_17803 Nat_220))
	(x_17799 (N_39 (succ_26 x_17803)) zero_26 (succ_26 x_17803))))
(assert (forall ((x_17802 Nat_220))
	(x_17799 (P_75 (succ_26 x_17802)) (succ_26 x_17802) zero_26)))
(assert (x_17799 (P_75 zero_26) zero_26 zero_26))
(declare-fun plus_27 (Integer_1 Integer_1 Integer_1) Bool)
(assert (forall ((x_17859 Nat_220) (x_17860 Nat_220) (n_41 Nat_220) (m_19 Nat_220))
	(=>	(and (plus_26 x_17859 (succ_26 zero_26) m_19)
			(plus_26 x_17860 x_17859 n_41))
		(plus_27 (N_39 x_17860) (N_39 m_19) (N_39 n_41)))))
(assert (forall ((x_17861 Integer_1) (x_17862 Nat_220) (n_42 Nat_220) (m_19 Nat_220))
	(=>	(and (plus_26 x_17862 (succ_26 zero_26) m_19)
			(x_17799 x_17861 n_42 x_17862))
		(plus_27 x_17861 (N_39 m_19) (P_75 n_42)))))
(assert (forall ((x_17864 Integer_1) (x_17865 Nat_220) (o_0 Nat_220) (m_20 Nat_220))
	(=>	(and (plus_26 x_17865 (succ_26 zero_26) o_0)
			(x_17799 x_17864 m_20 x_17865))
		(plus_27 x_17864 (P_75 m_20) (N_39 o_0)))))
(assert (forall ((x_17868 Nat_220) (n_43 Nat_220) (m_20 Nat_220))
	(=> (plus_26 x_17868 m_20 n_43)
	    (plus_27 (P_75 x_17868) (P_75 m_20) (P_75 n_43)))))
(assert (forall ((x_17869 Integer_1) (x_17870 Integer_1) (x_17871 Integer_1) (x_17872 Integer_1) (x_17873 Integer_1) (x_17805 Integer_1) (y_657 Integer_1) (z_680 Integer_1))
	(=>	(and true
			(diseqInteger_1 x_17870 x_17873)
			(plus_27 x_17869 x_17805 y_657)
			(times_6 x_17870 x_17869 z_680)
			(times_6 x_17871 x_17805 z_680)
			(times_6 x_17872 y_657 z_680)
			(plus_27 x_17873 x_17871 x_17872))
		false)))
(assert (forall ((x_17874 Nat_220) (x_17875 Nat_220) (x_17876 Nat_220) (x_17877 Nat_220) (x_17806 Nat_220) (y_658 Nat_220) (z_681 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17875 x_17877)
			(times_5 x_17874 y_658 z_681)
			(times_5 x_17875 x_17806 x_17874)
			(times_5 x_17876 x_17806 y_658)
			(times_5 x_17877 x_17876 z_681))
		false)))
(assert (forall ((x_17878 Nat_220) (x_17879 Nat_220) (x_17880 Nat_220) (x_17881 Nat_220) (x_17807 Nat_220) (y_659 Nat_220) (z_682 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17879 x_17881)
			(plus_26 x_17878 y_659 z_682)
			(plus_26 x_17879 x_17807 x_17878)
			(plus_26 x_17880 x_17807 y_659)
			(plus_26 x_17881 x_17880 z_682))
		false)))
(assert (forall ((x_17882 Nat_220) (x_17883 Nat_220) (x_17808 Nat_220) (y_660 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17882 x_17883)
			(times_5 x_17882 x_17808 y_660)
			(times_5 x_17883 y_660 x_17808))
		false)))
(assert (forall ((x_17884 Nat_220) (x_17885 Nat_220) (x_17809 Nat_220) (y_661 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17884 x_17885)
			(plus_26 x_17884 x_17809 y_661)
			(plus_26 x_17885 y_661 x_17809))
		false)))
(assert (forall ((x_17886 Nat_220) (x_17887 Nat_220) (x_17888 Nat_220) (x_17889 Nat_220) (x_17890 Nat_220) (x_17810 Nat_220) (y_662 Nat_220) (z_683 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17887 x_17890)
			(plus_26 x_17886 y_662 z_683)
			(times_5 x_17887 x_17810 x_17886)
			(times_5 x_17888 x_17810 y_662)
			(times_5 x_17889 x_17810 z_683)
			(plus_26 x_17890 x_17888 x_17889))
		false)))
(assert (forall ((x_17891 Nat_220) (x_17892 Nat_220) (x_17893 Nat_220) (x_17894 Nat_220) (x_17895 Nat_220) (x_17811 Nat_220) (y_663 Nat_220) (z_684 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17892 x_17895)
			(plus_26 x_17891 x_17811 y_663)
			(times_5 x_17892 x_17891 z_684)
			(times_5 x_17893 x_17811 z_684)
			(times_5 x_17894 y_663 z_684)
			(plus_26 x_17895 x_17893 x_17894))
		false)))
(assert (forall ((x_17896 Nat_220) (x_17812 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17896 x_17812)
			(times_5 x_17896 x_17812 (succ_26 zero_26)))
		false)))
(assert (forall ((x_17897 Nat_220) (x_17813 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17897 x_17813)
			(times_5 x_17897 (succ_26 zero_26) x_17813))
		false)))
(assert (forall ((x_17898 Nat_220) (x_17814 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17898 x_17814)
			(plus_26 x_17898 x_17814 zero_26))
		false)))
(assert (forall ((x_17899 Nat_220) (x_17815 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17899 x_17815)
			(plus_26 x_17899 zero_26 x_17815))
		false)))
(assert (forall ((x_17900 Nat_220) (x_17816 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17900 zero_26)
			(times_5 x_17900 x_17816 zero_26))
		false)))
(assert (forall ((x_17901 Nat_220) (x_17817 Nat_220))
	(=>	(and true
			(diseqNat_220 x_17901 zero_26)
			(times_5 x_17901 zero_26 x_17817))
		false)))
(check-sat)
